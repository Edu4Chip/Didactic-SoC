// Generated by CIRCT firtool-1.62.1-1-gdf5ed6ea5
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SystemControl(	// src/main/scala/dtu/SystemControl.scala:7:7
  input         clock,	// src/main/scala/dtu/SystemControl.scala:7:7
                reset,	// src/main/scala/dtu/SystemControl.scala:7:7
                apbPort_psel,	// src/main/scala/dtu/SystemControl.scala:9:19
                apbPort_penable,	// src/main/scala/dtu/SystemControl.scala:9:19
                apbPort_pwrite,	// src/main/scala/dtu/SystemControl.scala:9:19
  input  [31:0] apbPort_pwdata,	// src/main/scala/dtu/SystemControl.scala:9:19
  output        apbPort_pready,	// src/main/scala/dtu/SystemControl.scala:9:19
  output [31:0] apbPort_prdata,	// src/main/scala/dtu/SystemControl.scala:9:19
  output        ctrlPort_lerosReset,	// src/main/scala/dtu/SystemControl.scala:10:20
                ctrlPort_lerosBootFromRam,	// src/main/scala/dtu/SystemControl.scala:10:20
                ctrlPort_lerosUartLoopBack	// src/main/scala/dtu/SystemControl.scala:10:20
);

  reg  lerosResetReg;	// src/main/scala/dtu/SystemControl.scala:16:30
  reg  lerosBootFromRamReg;	// src/main/scala/dtu/SystemControl.scala:17:36
  reg  lerosUartLoopBackReg;	// src/main/scala/dtu/SystemControl.scala:18:37
  wire apbPort_pready_0 = apbPort_psel & apbPort_penable;	// src/main/scala/dtu/SystemControl.scala:31:21
  always @(posedge clock) begin	// src/main/scala/dtu/SystemControl.scala:7:7
    if (reset) begin	// src/main/scala/dtu/SystemControl.scala:7:7
      lerosResetReg <= 1'h0;	// src/main/scala/dtu/SystemControl.scala:7:7, :16:30
      lerosBootFromRamReg <= 1'h0;	// src/main/scala/dtu/SystemControl.scala:7:7, :17:36
      lerosUartLoopBackReg <= 1'h0;	// src/main/scala/dtu/SystemControl.scala:7:7, :18:37
    end
    else if (apbPort_pready_0 & apbPort_pwrite) begin	// src/main/scala/dtu/SystemControl.scala:16:30, :31:{21,41}, :35:26, :36:21
      lerosResetReg <= apbPort_pwdata[0];	// src/main/scala/dtu/SystemControl.scala:16:30, :36:38
      lerosBootFromRamReg <= apbPort_pwdata[1];	// src/main/scala/dtu/SystemControl.scala:17:36, :37:44
      lerosUartLoopBackReg <= apbPort_pwdata[2];	// src/main/scala/dtu/SystemControl.scala:18:37, :38:45
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/dtu/SystemControl.scala:7:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/SystemControl.scala:7:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/SystemControl.scala:7:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/dtu/SystemControl.scala:7:7
    initial begin	// src/main/scala/dtu/SystemControl.scala:7:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/dtu/SystemControl.scala:7:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/dtu/SystemControl.scala:7:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/dtu/SystemControl.scala:7:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/dtu/SystemControl.scala:7:7
        lerosResetReg = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/dtu/SystemControl.scala:7:7, :16:30
        lerosBootFromRamReg = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/dtu/SystemControl.scala:7:7, :16:30, :17:36
        lerosUartLoopBackReg = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/dtu/SystemControl.scala:7:7, :16:30, :18:37
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/SystemControl.scala:7:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/SystemControl.scala:7:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign apbPort_pready = apbPort_pready_0;	// src/main/scala/dtu/SystemControl.scala:7:7, :31:21
  assign apbPort_prdata =
    {29'h0, lerosUartLoopBackReg, lerosBootFromRamReg, lerosResetReg};	// src/main/scala/dtu/SystemControl.scala:7:7, :16:30, :17:36, :18:37, :23:18
  assign ctrlPort_lerosReset = lerosResetReg;	// src/main/scala/dtu/SystemControl.scala:7:7, :16:30
  assign ctrlPort_lerosBootFromRam = lerosBootFromRamReg;	// src/main/scala/dtu/SystemControl.scala:7:7, :17:36
  assign ctrlPort_lerosUartLoopBack = lerosUartLoopBackReg;	// src/main/scala/dtu/SystemControl.scala:7:7, :18:37
endmodule

module Rx(	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
  input        clock,	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
               reset,	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
               io_rxd,	// leros/src/main/scala/leros/uart/UARTRx.scala:25:14
               io_channel_ready,	// leros/src/main/scala/leros/uart/UARTRx.scala:25:14
  output       io_channel_valid,	// leros/src/main/scala/leros/uart/UARTRx.scala:25:14
  output [7:0] io_channel_bits	// leros/src/main/scala/leros/uart/UARTRx.scala:25:14
);

  reg        rxReg_REG;	// leros/src/main/scala/leros/uart/UARTRx.scala:34:30
  reg        rxReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:34:22
  reg        falling_REG;	// leros/src/main/scala/leros/uart/UARTRx.scala:35:35
  reg [7:0]  shiftReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:37:25
  reg [19:0] cntReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23
  reg [3:0]  bitsReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:39:24
  reg        valReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:40:23
  always @(posedge clock) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
    if (reset) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
      rxReg_REG <= 1'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:30
      rxReg <= 1'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:22
      shiftReg <= 8'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:37:25
      cntReg <= 20'h340;	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23
      bitsReg <= 4'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:39:24
      valReg <= 1'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :40:23
    end
    else begin	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
      rxReg_REG <= io_rxd;	// leros/src/main/scala/leros/uart/UARTRx.scala:34:30
      rxReg <= rxReg_REG;	// leros/src/main/scala/leros/uart/UARTRx.scala:34:{22,30}
      if ((|cntReg) | ~(|bitsReg)) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:37:25, :38:23, :39:24, :42:{15,24}, :44:{22,31}
      end
      else	// leros/src/main/scala/leros/uart/UARTRx.scala:37:25, :42:24, :44:31
        shiftReg <= {rxReg, shiftReg[7:1]};	// leros/src/main/scala/leros/uart/UARTRx.scala:34:22, :37:25, :46:{20,37}
      if (|cntReg)	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23, :42:15
        cntReg <= cntReg - 20'h1;	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23, :43:22
      else if (|bitsReg) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:39:24, :44:22
        cntReg <= 20'h340;	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23
        bitsReg <= bitsReg - 4'h1;	// leros/src/main/scala/leros/uart/UARTRx.scala:39:24, :47:24
      end
      else if (~rxReg & falling_REG) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:34:22, :35:{17,24,35}
        cntReg <= 20'h4E0;	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23, :53:12
        bitsReg <= 4'h8;	// leros/src/main/scala/leros/uart/UARTRx.scala:39:24, :54:13
      end
      valReg <=
        ~(valReg & io_channel_ready)
        & (~(|cntReg) & (|bitsReg) & bitsReg == 4'h1 | valReg);	// leros/src/main/scala/leros/uart/UARTRx.scala:38:23, :39:24, :40:23, :42:{15,24}, :44:{22,31}, :49:18, :57:{15,36}, :58:12
    end
    falling_REG <= rxReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:34:22, :35:35
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
    `ifdef FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
      `FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
    initial begin	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
      `ifdef INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
        `INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
        end	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
        rxReg_REG = _RANDOM[1'h0][0];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:30
        rxReg = _RANDOM[1'h0][1];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:{22,30}
        falling_REG = _RANDOM[1'h0][2];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:30, :35:35
        shiftReg = _RANDOM[1'h0][10:3];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:30, :37:25
        cntReg = _RANDOM[1'h0][30:11];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:30, :38:23
        bitsReg = {_RANDOM[1'h0][31], _RANDOM[1'h1][2:0]};	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :34:30, :39:24
        valReg = _RANDOM[1'h1][3];	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :39:24, :40:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
      `FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_channel_valid = valReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :40:23
  assign io_channel_bits = shiftReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:24:7, :37:25
endmodule

module Tx(	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
  input        clock,	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
               reset,	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
  output       io_txd,	// leros/src/main/scala/leros/uart/UARTTx.scala:22:14
               io_channel_ready,	// leros/src/main/scala/leros/uart/UARTTx.scala:22:14
  input        io_channel_valid,	// leros/src/main/scala/leros/uart/UARTTx.scala:22:14
  input  [7:0] io_channel_bits	// leros/src/main/scala/leros/uart/UARTTx.scala:22:14
);

  reg  [10:0] shiftReg;	// leros/src/main/scala/leros/uart/UARTTx.scala:29:25
  reg  [19:0] cntReg;	// leros/src/main/scala/leros/uart/UARTTx.scala:30:23
  reg  [3:0]  bitsReg;	// leros/src/main/scala/leros/uart/UARTTx.scala:31:24
  wire        _io_channel_ready_T = cntReg == 20'h0;	// leros/src/main/scala/leros/uart/UARTTx.scala:30:23, :33:31
  always @(posedge clock) begin	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
    if (reset) begin	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
      shiftReg <= 11'h7FF;	// leros/src/main/scala/leros/uart/UARTTx.scala:29:25
      cntReg <= 20'h0;	// leros/src/main/scala/leros/uart/UARTTx.scala:30:23
      bitsReg <= 4'h0;	// leros/src/main/scala/leros/uart/UARTTx.scala:31:24
    end
    else if (_io_channel_ready_T) begin	// leros/src/main/scala/leros/uart/UARTTx.scala:33:31
      if (|bitsReg) begin	// leros/src/main/scala/leros/uart/UARTTx.scala:31:24, :33:52
        shiftReg <= {1'h1, shiftReg[10:1]};	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :29:25, :40:28, :41:23
        bitsReg <= bitsReg - 4'h1;	// leros/src/main/scala/leros/uart/UARTTx.scala:31:24, :42:26
      end
      else begin	// leros/src/main/scala/leros/uart/UARTTx.scala:33:52
        shiftReg <= io_channel_valid ? {2'h3, io_channel_bits, 1'h0} : 11'h7FF;	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :29:25, :44:30, :46:{18,25,44}, :49:18
        if (io_channel_valid)	// leros/src/main/scala/leros/uart/UARTTx.scala:22:14
          bitsReg <= 4'hB;	// leros/src/main/scala/leros/uart/UARTTx.scala:31:24, :47:17
      end
      cntReg <= 20'h340;	// leros/src/main/scala/leros/uart/UARTTx.scala:30:23, :38:12
    end
    else	// leros/src/main/scala/leros/uart/UARTTx.scala:33:31
      cntReg <= cntReg - 20'h1;	// leros/src/main/scala/leros/uart/UARTTx.scala:30:23, :54:22
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
    `ifdef FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
      `FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
    initial begin	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
      `ifdef INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
        `INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
        end	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
        shiftReg = _RANDOM[1'h0][10:0];	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :29:25
        cntReg = _RANDOM[1'h0][30:11];	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :29:25, :30:23
        bitsReg = {_RANDOM[1'h0][31], _RANDOM[1'h1][2:0]};	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :29:25, :31:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
      `FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_txd = shiftReg[0];	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :29:25, :34:21
  assign io_channel_ready = _io_channel_ready_T & ~(|bitsReg);	// leros/src/main/scala/leros/uart/UARTTx.scala:21:7, :31:24, :33:{31,40,52}
endmodule

module PonteEscaper(	// src/main/scala/ponte/PonteEscaper.scala:12:7
  input        clock,	// src/main/scala/ponte/PonteEscaper.scala:12:7
               reset,	// src/main/scala/ponte/PonteEscaper.scala:12:7
  output       io_in_ready,	// src/main/scala/ponte/PonteEscaper.scala:14:14
  input        io_in_valid,	// src/main/scala/ponte/PonteEscaper.scala:14:14
  input  [7:0] io_in_bits,	// src/main/scala/ponte/PonteEscaper.scala:14:14
  output       io_valid,	// src/main/scala/ponte/PonteEscaper.scala:14:14
               io_startRead,	// src/main/scala/ponte/PonteEscaper.scala:14:14
               io_startWrite,	// src/main/scala/ponte/PonteEscaper.scala:14:14
  output [7:0] io_data,	// src/main/scala/ponte/PonteEscaper.scala:14:14
  input        io_stall	// src/main/scala/ponte/PonteEscaper.scala:14:14
);

  reg  escaped;	// src/main/scala/ponte/PonteEscaper.scala:23:24
  wire isEscape = io_in_bits == 8'h5A;	// src/main/scala/ponte/PonteEscaper.scala:24:29
  always @(posedge clock) begin	// src/main/scala/ponte/PonteEscaper.scala:12:7
    if (reset)	// src/main/scala/ponte/PonteEscaper.scala:12:7
      escaped <= 1'h1;	// src/main/scala/ponte/PonteEscaper.scala:12:7, :23:24
    else	// src/main/scala/ponte/PonteEscaper.scala:12:7
      escaped <= isEscape & io_in_valid | ~(escaped & io_in_valid) & escaped;	// src/main/scala/ponte/PonteEscaper.scala:23:24, :24:29, :26:{17,33}, :27:13, :28:{22,38}, :29:13
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/ponte/PonteEscaper.scala:12:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/ponte/PonteEscaper.scala:12:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/ponte/PonteEscaper.scala:12:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/ponte/PonteEscaper.scala:12:7
    initial begin	// src/main/scala/ponte/PonteEscaper.scala:12:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/ponte/PonteEscaper.scala:12:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/ponte/PonteEscaper.scala:12:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/ponte/PonteEscaper.scala:12:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/ponte/PonteEscaper.scala:12:7
        escaped = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/ponte/PonteEscaper.scala:12:7, :23:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/ponte/PonteEscaper.scala:12:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/ponte/PonteEscaper.scala:12:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_ready = ~io_stall;	// src/main/scala/ponte/PonteEscaper.scala:12:7, :37:18
  assign io_valid = ~isEscape & io_in_valid;	// src/main/scala/ponte/PonteEscaper.scala:12:7, :24:29, :32:18
  assign io_startRead = io_in_bits == 8'hAB;	// src/main/scala/ponte/PonteEscaper.scala:12:7, :33:30
  assign io_startWrite = io_in_bits == 8'hAA;	// src/main/scala/ponte/PonteEscaper.scala:12:7, :34:31
  assign io_data = {io_in_bits[7:6], io_in_bits[5:0] ^ {escaped, 5'h0}};	// src/main/scala/ponte/PonteEscaper.scala:12:7, :23:24, :35:{25,30}
endmodule

module PonteDecoder(	// src/main/scala/ponte/PonteDecoder.scala:16:7
  input         clock,	// src/main/scala/ponte/PonteDecoder.scala:16:7
                reset,	// src/main/scala/ponte/PonteDecoder.scala:16:7
  output        io_in_ready,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  input         io_in_valid,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  input  [7:0]  io_in_bits,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  input         io_out_ready,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  output        io_out_valid,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  output [7:0]  io_out_bits,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  output [15:0] io_apb_paddr,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  output        io_apb_psel,	// src/main/scala/ponte/PonteDecoder.scala:18:14
                io_apb_penable,	// src/main/scala/ponte/PonteDecoder.scala:18:14
                io_apb_pwrite,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  output [31:0] io_apb_pwdata,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  input         io_apb_pready,	// src/main/scala/ponte/PonteDecoder.scala:18:14
  input  [31:0] io_apb_prdata	// src/main/scala/ponte/PonteDecoder.scala:18:14
);

  wire        _dec_io_valid;	// src/main/scala/ponte/PonteDecoder.scala:28:19
  wire        _dec_io_startRead;	// src/main/scala/ponte/PonteDecoder.scala:28:19
  wire        _dec_io_startWrite;	// src/main/scala/ponte/PonteDecoder.scala:28:19
  wire [7:0]  _dec_io_data;	// src/main/scala/ponte/PonteDecoder.scala:28:19
  reg  [2:0]  stateReg;	// src/main/scala/ponte/PonteDecoder.scala:35:25
  reg  [1:0]  cntReg;	// src/main/scala/ponte/PonteDecoder.scala:36:23
  reg  [15:0] addrReg;	// src/main/scala/ponte/PonteDecoder.scala:37:24
  reg         isWriteReg;	// src/main/scala/ponte/PonteDecoder.scala:38:27
  reg  [7:0]  readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27
  reg  [31:0] dataReg;	// src/main/scala/ponte/PonteDecoder.scala:40:24
  wire        _GEN = stateReg == 3'h0;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :123:22
  wire        _GEN_0 = stateReg == 3'h1;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :61:20
  wire        _GEN_1 = stateReg == 3'h2;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :63:20
  wire        _GEN_2 = cntReg == 2'h0;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :36:23, :78:21
  wire        _GEN_3 = stateReg == 3'h3;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :79:26
  wire        _GEN_4 = stateReg == 3'h4;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :79:26
  wire        _GEN_5 = stateReg == 3'h5;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :96:16
  wire        _GEN_6 = _GEN | _GEN_0 | _GEN_1 | _GEN_3;	// src/main/scala/ponte/PonteDecoder.scala:42:15, :54:20
  wire        _GEN_7 = _GEN_3 | _GEN_4;	// src/main/scala/ponte/PonteDecoder.scala:43:18, :54:20
  wire        _GEN_8 = stateReg == 3'h6;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :106:24
  wire        _GEN_9 = _GEN_4 | _GEN_5 | _GEN_8;	// src/main/scala/ponte/PonteDecoder.scala:54:20, :94:20, :99:20, :110:20
  wire        _GEN_10 = ~_GEN_6 & (_GEN_9 | (&stateReg));	// src/main/scala/ponte/PonteDecoder.scala:35:25, :42:15, :52:16, :54:20, :94:20, :99:20, :110:20
  reg  [7:0]  casez_tmp;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20
  always_comb begin	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
    casez (stateReg)	// src/main/scala/ponte/PonteDecoder.scala:35:25, :39:27, :54:20, :69:18
      3'b000:
        casez_tmp = readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
      3'b001:
        casez_tmp = _dec_io_data;	// src/main/scala/ponte/PonteDecoder.scala:28:19, :39:27, :54:20, :69:18
      3'b010:
        casez_tmp = readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
      3'b011:
        casez_tmp = readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
      3'b100:
        casez_tmp = readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
      3'b101:
        casez_tmp = readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
      3'b110:
        casez_tmp = readLenReg;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20, :69:18
      default:
        casez_tmp =
          _GEN_1 | _GEN_3 | _GEN_9 | ~(&stateReg) ? readLenReg : readLenReg - 8'h1;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :39:27, :54:20, :69:18, :94:20, :99:20, :110:20, :122:32
    endcase	// src/main/scala/ponte/PonteDecoder.scala:35:25, :39:27, :54:20, :69:18
  end // always_comb
  reg  [2:0]  casez_tmp_0;	// src/main/scala/ponte/PonteDecoder.scala:54:20, :70:26
  wire        _GEN_11 = _dec_io_valid & _GEN_2;	// src/main/scala/ponte/PonteDecoder.scala:28:19, :35:25, :75:26, :78:{21,30}, :79:20
  always_comb begin	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :85:26, :96:16, :103:27, :112:26, :123:16
    casez (stateReg)	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :85:26, :96:16, :103:27, :112:26, :123:16
      3'b000:
        casez_tmp_0 = stateReg;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :85:26, :96:16, :103:27, :112:26, :123:16
      3'b001:
        casez_tmp_0 = _dec_io_valid ? 3'h2 : stateReg;	// src/main/scala/ponte/PonteDecoder.scala:28:19, :35:25, :54:20, :63:20, :70:26, :71:18, :75:26, :85:26, :96:16, :103:27, :112:26, :123:16
      3'b010:
        casez_tmp_0 = _GEN_11 ? (isWriteReg ? 3'h3 : 3'h4) : stateReg;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :38:27, :54:20, :70:26, :75:26, :78:30, :79:{20,26}, :85:26, :96:16, :103:27, :112:26, :123:16
      3'b011:
        casez_tmp_0 = _GEN_11 ? 3'h4 : stateReg;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :78:30, :79:{20,26}, :85:26, :88:30, :89:20, :96:16, :103:27, :112:26, :123:16
      3'b100:
        casez_tmp_0 = 3'h5;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :85:26, :96:16, :103:27, :112:26, :123:16
      3'b101:
        casez_tmp_0 = io_apb_pready ? (isWriteReg ? 3'h3 : 3'h6) : stateReg;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :38:27, :54:20, :70:26, :75:26, :79:26, :85:26, :96:16, :103:27, :106:{18,24}, :112:26, :123:16
      3'b110:
        casez_tmp_0 = io_out_ready & _GEN_2 ? 3'h7 : stateReg;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :78:21, :85:26, :96:16, :103:27, :112:26, :115:30, :116:20, :123:16
      default:
        casez_tmp_0 = {|readLenReg, 2'h0};	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25, :39:27, :54:20, :70:26, :75:26, :85:26, :96:16, :103:27, :112:26, :123:{16,22,34}
    endcase	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26, :75:26, :85:26, :96:16, :103:27, :112:26, :123:16
  end // always_comb
  wire        _GEN_12 = _GEN | _GEN_0;	// src/main/scala/ponte/PonteDecoder.scala:37:24, :54:20
  wire        _GEN_13 = _GEN_8 & io_out_ready;	// src/main/scala/ponte/PonteDecoder.scala:40:24, :54:20, :112:26, :113:17
  wire        _GEN_14 = _dec_io_valid & ~_GEN_10;	// src/main/scala/ponte/PonteDecoder.scala:28:19, :52:16, :54:20, :131:{21,24}
  always @(posedge clock) begin	// src/main/scala/ponte/PonteDecoder.scala:16:7
    if (reset) begin	// src/main/scala/ponte/PonteDecoder.scala:16:7
      stateReg <= 3'h0;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :123:22
      cntReg <= 2'h0;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :36:23
      addrReg <= 16'h0;	// src/main/scala/ponte/PonteDecoder.scala:37:24
      isWriteReg <= 1'h0;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :38:27
      readLenReg <= 8'h0;	// src/main/scala/ponte/PonteDecoder.scala:39:27
      dataReg <= 32'h0;	// src/main/scala/ponte/PonteDecoder.scala:40:24
    end
    else begin	// src/main/scala/ponte/PonteDecoder.scala:16:7
      if (_GEN_14) begin	// src/main/scala/ponte/PonteDecoder.scala:131:21
        if (_dec_io_startRead)	// src/main/scala/ponte/PonteDecoder.scala:28:19
          stateReg <= 3'h1;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :61:20
        else if (_dec_io_startWrite)	// src/main/scala/ponte/PonteDecoder.scala:28:19
          stateReg <= 3'h2;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :63:20
        else if (_GEN) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
          if (_dec_io_valid & _dec_io_startRead)	// src/main/scala/ponte/PonteDecoder.scala:28:19, :35:25, :59:26, :60:32, :61:20, :62:39
            stateReg <= 3'h1;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :61:20
        end
        else	// src/main/scala/ponte/PonteDecoder.scala:54:20
          stateReg <= casez_tmp_0;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26
        isWriteReg <=
          ~_dec_io_startRead
          & (_dec_io_startWrite | (_GEN ? _dec_io_startWrite : isWriteReg));	// src/main/scala/ponte/PonteDecoder.scala:28:19, :38:27, :54:20, :57:18, :132:28, :133:18, :135:35, :136:18
      end
      else if (_GEN) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
        if (_dec_io_valid) begin	// src/main/scala/ponte/PonteDecoder.scala:28:19
          if (_dec_io_startRead)	// src/main/scala/ponte/PonteDecoder.scala:28:19
            stateReg <= 3'h1;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :61:20
          else if (_dec_io_startWrite)	// src/main/scala/ponte/PonteDecoder.scala:28:19
            stateReg <= 3'h2;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :63:20
        end
        isWriteReg <= _dec_io_startWrite;	// src/main/scala/ponte/PonteDecoder.scala:28:19, :38:27
      end
      else	// src/main/scala/ponte/PonteDecoder.scala:54:20
        stateReg <= casez_tmp_0;	// src/main/scala/ponte/PonteDecoder.scala:35:25, :54:20, :70:26
      if (_GEN_14 & ~_dec_io_startRead & _dec_io_startWrite | _GEN_12)	// src/main/scala/ponte/PonteDecoder.scala:28:19, :37:24, :54:20, :56:14, :68:14, :131:{21,39}, :132:28, :133:18, :135:35
        cntReg <= 2'h1;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :36:23
      else if (_GEN_1) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
        if (_dec_io_valid) begin	// src/main/scala/ponte/PonteDecoder.scala:28:19
          if (_GEN_2)	// src/main/scala/ponte/PonteDecoder.scala:78:21
            cntReg <= 2'h3;	// src/main/scala/ponte/PonteDecoder.scala:36:23, :79:26
          else	// src/main/scala/ponte/PonteDecoder.scala:78:21
            cntReg <= cntReg - 2'h1;	// src/main/scala/ponte/PonteDecoder.scala:36:23, :76:26
        end
      end
      else if (_GEN_3) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
        if (_dec_io_valid)	// src/main/scala/ponte/PonteDecoder.scala:28:19
          cntReg <= cntReg - 2'h1;	// src/main/scala/ponte/PonteDecoder.scala:36:23, :86:26
      end
      else if (~_GEN_4) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
        if (_GEN_5)	// src/main/scala/ponte/PonteDecoder.scala:54:20
          cntReg <= 2'h3;	// src/main/scala/ponte/PonteDecoder.scala:36:23, :79:26
        else if (_GEN_13)	// src/main/scala/ponte/PonteDecoder.scala:40:24, :54:20, :112:26, :113:17
          cntReg <= cntReg - 2'h1;	// src/main/scala/ponte/PonteDecoder.scala:36:23, :114:26
      end
      if (~_GEN_12) begin	// src/main/scala/ponte/PonteDecoder.scala:37:24, :54:20
        if (_GEN_1) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
          if (_dec_io_valid)	// src/main/scala/ponte/PonteDecoder.scala:28:19
            addrReg <= {_dec_io_data, addrReg[15:8]};	// src/main/scala/ponte/PonteDecoder.scala:28:19, :37:24, :77:{23,44}
        end
        else if (_GEN_7 | ~(_GEN_5 & io_apb_pready)) begin	// src/main/scala/ponte/PonteDecoder.scala:37:24, :43:18, :54:20, :103:27, :105:17
        end
        else	// src/main/scala/ponte/PonteDecoder.scala:37:24, :54:20
          addrReg <= addrReg + 16'h4;	// src/main/scala/ponte/PonteDecoder.scala:37:24, :105:28
      end
      readLenReg <= casez_tmp;	// src/main/scala/ponte/PonteDecoder.scala:39:27, :54:20
      if (~(_GEN | _GEN_0 | _GEN_1)) begin	// src/main/scala/ponte/PonteDecoder.scala:40:24, :54:20
        if (_GEN_3) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
          if (_dec_io_valid)	// src/main/scala/ponte/PonteDecoder.scala:28:19
            dataReg <= {_dec_io_data, dataReg[31:8]};	// src/main/scala/ponte/PonteDecoder.scala:28:19, :40:24, :87:{23,44}
        end
        else if (~_GEN_4) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
          if (_GEN_5) begin	// src/main/scala/ponte/PonteDecoder.scala:54:20
            if (io_apb_pready)	// src/main/scala/ponte/PonteDecoder.scala:18:14
              dataReg <= io_apb_prdata;	// src/main/scala/ponte/PonteDecoder.scala:40:24
          end
          else if (_GEN_13)	// src/main/scala/ponte/PonteDecoder.scala:40:24, :54:20, :112:26, :113:17
            dataReg <= {8'h0, dataReg[31:8]};	// src/main/scala/ponte/PonteDecoder.scala:39:27, :40:24, :113:{17,27}
        end
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/ponte/PonteDecoder.scala:16:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/ponte/PonteDecoder.scala:16:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/ponte/PonteDecoder.scala:16:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];	// src/main/scala/ponte/PonteDecoder.scala:16:7
    initial begin	// src/main/scala/ponte/PonteDecoder.scala:16:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/ponte/PonteDecoder.scala:16:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/ponte/PonteDecoder.scala:16:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/ponte/PonteDecoder.scala:16:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/ponte/PonteDecoder.scala:16:7
        end	// src/main/scala/ponte/PonteDecoder.scala:16:7
        stateReg = _RANDOM[1'h0][2:0];	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25
        cntReg = _RANDOM[1'h0][4:3];	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25, :36:23
        addrReg = _RANDOM[1'h0][20:5];	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25, :37:24
        isWriteReg = _RANDOM[1'h0][21];	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25, :38:27
        readLenReg = _RANDOM[1'h0][29:22];	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25, :39:27
        dataReg = {_RANDOM[1'h0][31:30], _RANDOM[1'h1][29:0]};	// src/main/scala/ponte/PonteDecoder.scala:16:7, :35:25, :40:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/ponte/PonteDecoder.scala:16:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/ponte/PonteDecoder.scala:16:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  PonteEscaper dec (	// src/main/scala/ponte/PonteDecoder.scala:28:19
    .clock         (clock),
    .reset         (reset),
    .io_in_ready   (io_in_ready),
    .io_in_valid   (io_in_valid),
    .io_in_bits    (io_in_bits),
    .io_valid      (_dec_io_valid),
    .io_startRead  (_dec_io_startRead),
    .io_startWrite (_dec_io_startWrite),
    .io_data       (_dec_io_data),
    .io_stall      (_GEN_10)	// src/main/scala/ponte/PonteDecoder.scala:52:16, :54:20
  );
  assign io_out_valid = ~(_GEN | _GEN_0 | _GEN_1 | _GEN_3 | _GEN_4 | _GEN_5) & _GEN_8;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :49:16, :54:20
  assign io_out_bits = dataReg[7:0];	// src/main/scala/ponte/PonteDecoder.scala:16:7, :40:24, :50:25
  assign io_apb_paddr = addrReg;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :37:24
  assign io_apb_psel = ~_GEN_6 & (_GEN_4 | _GEN_5);	// src/main/scala/ponte/PonteDecoder.scala:16:7, :42:15, :54:20, :95:19
  assign io_apb_penable = ~(_GEN | _GEN_0 | _GEN_1 | _GEN_7) & _GEN_5;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :43:18, :54:20
  assign io_apb_pwrite = isWriteReg;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :38:27
  assign io_apb_pwdata = dataReg;	// src/main/scala/ponte/PonteDecoder.scala:16:7, :40:24
endmodule

module Ponte(	// src/main/scala/ponte/Ponte.scala:26:7
  input         clock,	// src/main/scala/ponte/Ponte.scala:26:7
                reset,	// src/main/scala/ponte/Ponte.scala:26:7
  output        io_uart_tx,	// src/main/scala/ponte/Ponte.scala:28:14
  input         io_uart_rx,	// src/main/scala/ponte/Ponte.scala:28:14
  output [15:0] io_apb_paddr,	// src/main/scala/ponte/Ponte.scala:28:14
  output        io_apb_psel,	// src/main/scala/ponte/Ponte.scala:28:14
                io_apb_penable,	// src/main/scala/ponte/Ponte.scala:28:14
                io_apb_pwrite,	// src/main/scala/ponte/Ponte.scala:28:14
  output [31:0] io_apb_pwdata,	// src/main/scala/ponte/Ponte.scala:28:14
  input         io_apb_pready,	// src/main/scala/ponte/Ponte.scala:28:14
  input  [31:0] io_apb_prdata	// src/main/scala/ponte/Ponte.scala:28:14
);

  wire       _ponteDecoder_io_in_ready;	// src/main/scala/ponte/Ponte.scala:39:28
  wire       _ponteDecoder_io_out_valid;	// src/main/scala/ponte/Ponte.scala:39:28
  wire [7:0] _ponteDecoder_io_out_bits;	// src/main/scala/ponte/Ponte.scala:39:28
  wire       _uartTx_io_channel_ready;	// src/main/scala/ponte/Ponte.scala:34:22
  wire       _uartRx_io_channel_valid;	// src/main/scala/ponte/Ponte.scala:33:22
  wire [7:0] _uartRx_io_channel_bits;	// src/main/scala/ponte/Ponte.scala:33:22
  Rx uartRx (	// src/main/scala/ponte/Ponte.scala:33:22
    .clock            (clock),
    .reset            (reset),
    .io_rxd           (io_uart_rx),
    .io_channel_ready (_ponteDecoder_io_in_ready),	// src/main/scala/ponte/Ponte.scala:39:28
    .io_channel_valid (_uartRx_io_channel_valid),
    .io_channel_bits  (_uartRx_io_channel_bits)
  );
  Tx uartTx (	// src/main/scala/ponte/Ponte.scala:34:22
    .clock            (clock),
    .reset            (reset),
    .io_txd           (io_uart_tx),
    .io_channel_ready (_uartTx_io_channel_ready),
    .io_channel_valid (_ponteDecoder_io_out_valid),	// src/main/scala/ponte/Ponte.scala:39:28
    .io_channel_bits  (_ponteDecoder_io_out_bits)	// src/main/scala/ponte/Ponte.scala:39:28
  );
  PonteDecoder ponteDecoder (	// src/main/scala/ponte/Ponte.scala:39:28
    .clock          (clock),
    .reset          (reset),
    .io_in_ready    (_ponteDecoder_io_in_ready),
    .io_in_valid    (_uartRx_io_channel_valid),	// src/main/scala/ponte/Ponte.scala:33:22
    .io_in_bits     (_uartRx_io_channel_bits),	// src/main/scala/ponte/Ponte.scala:33:22
    .io_out_ready   (_uartTx_io_channel_ready),	// src/main/scala/ponte/Ponte.scala:34:22
    .io_out_valid   (_ponteDecoder_io_out_valid),
    .io_out_bits    (_ponteDecoder_io_out_bits),
    .io_apb_paddr   (io_apb_paddr),
    .io_apb_psel    (io_apb_psel),
    .io_apb_penable (io_apb_penable),
    .io_apb_pwrite  (io_apb_pwrite),
    .io_apb_pwdata  (io_apb_pwdata),
    .io_apb_pready  (io_apb_pready),
    .io_apb_prdata  (io_apb_prdata)
  );
endmodule

module AluAccu(	// leros/src/main/scala/leros/AluAccu.scala:13:7
  input         clock,	// leros/src/main/scala/leros/AluAccu.scala:13:7
                reset,	// leros/src/main/scala/leros/AluAccu.scala:13:7
  input  [2:0]  io_op,	// leros/src/main/scala/leros/AluAccu.scala:14:14
  input  [31:0] io_din,	// leros/src/main/scala/leros/AluAccu.scala:14:14
  input  [3:0]  io_enaMask,	// leros/src/main/scala/leros/AluAccu.scala:14:14
  input         io_enaByte,	// leros/src/main/scala/leros/AluAccu.scala:14:14
                io_enaHalf,	// leros/src/main/scala/leros/AluAccu.scala:14:14
  input  [1:0]  io_off,	// leros/src/main/scala/leros/AluAccu.scala:14:14
  output [31:0] io_accu	// leros/src/main/scala/leros/AluAccu.scala:14:14
);

  reg  [31:0] accuReg;	// leros/src/main/scala/leros/AluAccu.scala:24:24
  reg  [31:0] casez_tmp;	// leros/src/main/scala/leros/AluAccu.scala:31:14, :33:11
  always_comb begin	// leros/src/main/scala/leros/AluAccu.scala:29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:11, :51:11, :54:11
    casez (io_op)	// leros/src/main/scala/leros/AluAccu.scala:29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:11, :51:11, :54:11
      3'b000:
        casez_tmp = accuReg;	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:11, :51:11, :54:11
      3'b001:
        casez_tmp = accuReg + io_din;	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:{11,16}, :39:11, :42:11, :45:11, :48:11, :51:11, :54:11
      3'b010:
        casez_tmp = accuReg - io_din;	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:11, :39:{11,16}, :42:11, :45:11, :48:11, :51:11, :54:11
      3'b011:
        casez_tmp = accuReg & io_din;	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:11, :39:11, :42:{11,16}, :45:11, :48:11, :51:11, :54:11
      3'b100:
        casez_tmp = accuReg | io_din;	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:{11,16}, :48:11, :51:11, :54:11
      3'b101:
        casez_tmp = accuReg ^ io_din;	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:{11,16}, :51:11, :54:11
      3'b110:
        casez_tmp = io_din;	// leros/src/main/scala/leros/AluAccu.scala:29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:11, :51:11, :54:11
      default:
        casez_tmp = {accuReg[31], accuReg[31:1]};	// leros/src/main/scala/leros/AluAccu.scala:24:24, :29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:11, :51:{11,15,20,24}, :54:11
    endcase	// leros/src/main/scala/leros/AluAccu.scala:29:24, :31:14, :33:11, :36:11, :39:11, :42:11, :45:11, :48:11, :51:11, :54:11
  end // always_comb
  reg  [7:0]  casez_tmp_0;	// leros/src/main/scala/leros/AluAccu.scala:60:24, :61:10, :62:30
  always_comb begin	// leros/src/main/scala/leros/AluAccu.scala:58:25, :60:{15,24}, :61:10, :62:{21,30}, :63:10, :65:{21,30}, :66:10
    casez (io_off)	// leros/src/main/scala/leros/AluAccu.scala:58:25, :60:{15,24}, :61:10, :62:{21,30}, :63:10, :65:{21,30}, :66:10
      2'b00:
        casez_tmp_0 = casez_tmp[7:0];	// leros/src/main/scala/leros/AluAccu.scala:31:14, :33:11, :58:{25,29}, :60:{15,24}, :61:10, :62:{21,30}, :63:10, :65:{21,30}, :66:10
      2'b01:
        casez_tmp_0 = casez_tmp[15:8];	// leros/src/main/scala/leros/AluAccu.scala:31:14, :33:11, :58:25, :60:{15,24}, :61:{10,16}, :62:{21,30}, :63:10, :65:{21,30}, :66:10
      2'b10:
        casez_tmp_0 = casez_tmp[23:16];	// leros/src/main/scala/leros/AluAccu.scala:31:14, :33:11, :58:25, :60:{15,24}, :61:10, :62:{21,30}, :63:{10,16}, :65:{21,30}, :66:10
      default:
        casez_tmp_0 = casez_tmp[31:24];	// leros/src/main/scala/leros/AluAccu.scala:31:14, :33:11, :58:25, :60:{15,24}, :61:10, :62:{21,30}, :63:10, :65:{21,30}, :66:{10,16}
    endcase	// leros/src/main/scala/leros/AluAccu.scala:58:25, :60:{15,24}, :61:10, :62:{21,30}, :63:10, :65:{21,30}, :66:10
  end // always_comb
  wire [15:0] _GEN =
    io_enaByte
      ? {{8{casez_tmp_0[7]}}, casez_tmp_0}
      : io_off == 2'h1 | io_off != 2'h2 ? casez_tmp[15:0] : casez_tmp[31:16];	// leros/src/main/scala/leros/AluAccu.scala:31:14, :33:11, :59:{25,29}, :60:{15,24}, :61:10, :62:{21,30}, :64:16, :69:21, :70:13, :72:13
  always @(posedge clock) begin	// leros/src/main/scala/leros/AluAccu.scala:13:7
    if (reset)	// leros/src/main/scala/leros/AluAccu.scala:13:7
      accuReg <= 32'h0;	// leros/src/main/scala/leros/AluAccu.scala:24:24
    else if ((io_enaByte | io_enaHalf) & (&io_enaMask))	// leros/src/main/scala/leros/AluAccu.scala:81:{20,35,48}
      accuReg <= {{16{_GEN[15]}}, _GEN};	// leros/src/main/scala/leros/AluAccu.scala:24:24, :69:21, :70:13, :72:13
    else	// leros/src/main/scala/leros/AluAccu.scala:81:35
      accuReg <=
        {io_enaMask[3] ? casez_tmp[31:24] : accuReg[31:24],
         io_enaMask[2] ? casez_tmp[23:16] : accuReg[23:16],
         io_enaMask[1] ? casez_tmp[15:8] : accuReg[15:8],
         io_enaMask[0] ? casez_tmp[7:0] : accuReg[7:0]};	// leros/src/main/scala/leros/AluAccu.scala:24:24, :31:14, :33:11, :58:29, :78:{20,31,39,66}, :87:22
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// leros/src/main/scala/leros/AluAccu.scala:13:7
    `ifdef FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/AluAccu.scala:13:7
      `FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/AluAccu.scala:13:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// leros/src/main/scala/leros/AluAccu.scala:13:7
    initial begin	// leros/src/main/scala/leros/AluAccu.scala:13:7
      `ifdef INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/AluAccu.scala:13:7
        `INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/AluAccu.scala:13:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// leros/src/main/scala/leros/AluAccu.scala:13:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// leros/src/main/scala/leros/AluAccu.scala:13:7
        accuReg = _RANDOM[/*Zero width*/ 1'b0];	// leros/src/main/scala/leros/AluAccu.scala:13:7, :24:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/AluAccu.scala:13:7
      `FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/AluAccu.scala:13:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_accu = accuReg;	// leros/src/main/scala/leros/AluAccu.scala:13:7, :24:24
endmodule

module Decode(	// leros/src/main/scala/leros/Decode.scala:47:7
  input  [15:0] io_din,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [31:0] io_dout_operand,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [3:0]  io_dout_enaMask,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [2:0]  io_dout_op,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [9:0]  io_dout_off,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [11:0] io_dout_brOff,	// leros/src/main/scala/leros/Decode.scala:48:14
  output        io_dout_useDecOpd,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [3:0]  io_dout_nextState,	// leros/src/main/scala/leros/Decode.scala:48:14
  output        io_dout_enaByte,	// leros/src/main/scala/leros/Decode.scala:48:14
                io_dout_enaHalf,	// leros/src/main/scala/leros/Decode.scala:48:14
                io_dout_isDataAccess,	// leros/src/main/scala/leros/Decode.scala:48:14
  output [3:0]  io_dout_brType	// leros/src/main/scala/leros/Decode.scala:48:14
);

  wire        noSext;	// leros/src/main/scala/leros/Decode.scala:79:27, :91:24
  wire [3:0]  _GEN =
    {io_din[15:12] == 4'h8 | io_din[15:12] == 4'h9 | io_din[15:12] == 4'hA
       | io_din[15:12] == 4'hB | io_din[15:12] == 4'hC,
     3'h0};	// leros/src/main/scala/leros/Decode.scala:33:10, :38:17, :69:21, :70:{15,37,60}, :71:{11,25,34,49}, :72:17, :91:24, :201:12
  wire [31:0] _GEN_0 = {noSext ? 24'h0 : {24{io_din[7]}}, io_din[7:0]};	// leros/src/main/scala/leros/Decode.scala:79:27, :81:{10,18}, :82:13, :83:{17,29}, :91:24, :174:32
  wire [9:0]  _GEN_1 = {io_din[7:0], 2'h0};	// leros/src/main/scala/leros/Decode.scala:81:18, :89:{7,23}
  wire        _GEN_2 = io_din[15:8] == 8'h8;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_3 = io_din[15:8] == 8'h9;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_4 = io_din[15:8] == 8'hC;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_5 = io_din[15:8] == 8'hD;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_6 = io_din[15:8] == 8'h10;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_7 = io_din[15:8] == 8'h20;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_8 = io_din[15:8] == 8'h21;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_9 = io_din[15:8] == 8'h22;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_10 = io_din[15:8] == 8'h23;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_11 = io_din[15:8] == 8'h24;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_12 = io_din[15:8] == 8'h25;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_13 = io_din[15:8] == 8'h26;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_14 = io_din[15:8] == 8'h27;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  assign noSext =
    ~(_GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9)
    & (_GEN_10 | ~_GEN_11 & (_GEN_12 | ~_GEN_13 & _GEN_14));	// leros/src/main/scala/leros/Decode.scala:79:27, :91:24, :134:14, :145:14
  wire        _GEN_15 = io_din[15:8] == 8'h29;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_16 = io_din[15:8] == 8'h2A;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_17 = io_din[15:8] == 8'h2B;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_18 = _GEN_13 | _GEN_14;	// leros/src/main/scala/leros/Decode.scala:83:17, :91:24
  wire        _GEN_19 =
    _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10
    | _GEN_11 | _GEN_12 | _GEN_18;	// leros/src/main/scala/leros/Decode.scala:83:17, :91:24
  wire        _GEN_20 = io_din[15:8] == 8'h30;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_21 = io_din[15:8] == 8'h50;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_22 = io_din[15:8] == 8'h60;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_23 = io_din[15:8] == 8'h61;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_24 =
    _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10
    | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17 | _GEN_20
    | _GEN_21 | _GEN_22;	// leros/src/main/scala/leros/Decode.scala:39:15, :91:24
  wire [9:0]  _GEN_25 = {{2{io_din[7]}}, io_din[7:0]};	// leros/src/main/scala/leros/Decode.scala:81:{10,18}, :195:11
  wire        _GEN_26 = io_din[15:8] == 8'h62;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_27 = _GEN_22 | _GEN_23 | _GEN_26;	// leros/src/main/scala/leros/Decode.scala:33:10, :91:24, :186:12, :193:12, :201:12
  wire        _GEN_28 = _GEN_20 | _GEN_21;	// leros/src/main/scala/leros/Decode.scala:33:10, :91:24
  wire        _GEN_29 = _GEN_15 | _GEN_16 | _GEN_17;	// leros/src/main/scala/leros/Decode.scala:91:24, :160:12, :166:12, :172:12
  wire [9:0]  _GEN_30 = {io_din[7], io_din[7:0], 1'h0};	// leros/src/main/scala/leros/Decode.scala:31:15, :81:{10,18}, :203:11
  wire        _GEN_31 = io_din[15:8] == 8'h70;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_32 = io_din[15:8] == 8'h71;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  wire        _GEN_33 = io_din[15:8] == 8'h72;	// leros/src/main/scala/leros/Decode.scala:91:{15,24}
  assign io_dout_operand =
    _GEN_19
      ? _GEN_0
      : _GEN_15
          ? {{16{io_din[7]}}, io_din[7:0], 8'h0}
          : _GEN_16
              ? {{8{io_din[7]}}, io_din[7:0], 16'h0}
              : _GEN_17 ? {io_din[7:0], 24'h0} : _GEN_0;	// leros/src/main/scala/leros/Decode.scala:47:7, :81:{10,18}, :82:13, :83:{17,29}, :91:24, :162:{17,26,41}, :168:{17,26,41}, :174:{17,32}
  assign io_dout_enaMask =
    _GEN_19
      ? 4'hF
      : _GEN_15 ? 4'hE : _GEN_16 ? 4'hC : _GEN_17 ? 4'h8 : _GEN_28 ? 4'h0 : {4{_GEN_27}};	// leros/src/main/scala/leros/Decode.scala:32:15, :33:10, :47:7, :70:15, :71:34, :83:17, :91:24, :94:17, :99:17, :104:17, :109:17, :114:17, :118:17, :123:17, :128:17, :133:17, :139:17, :144:17, :150:17, :155:17, :161:17, :167:17, :173:17, :186:12, :187:17, :193:12, :194:17, :201:12, :202:17
  assign io_dout_op =
    _GEN_2 | _GEN_3
      ? 3'h1
      : _GEN_4 | _GEN_5
          ? 3'h2
          : _GEN_6
              ? 3'h7
              : _GEN_7 | _GEN_8
                  ? 3'h6
                  : _GEN_9 | _GEN_10
                      ? 3'h3
                      : _GEN_11 | _GEN_12
                          ? 3'h4
                          : _GEN_18
                              ? 3'h5
                              : _GEN_29 | ~(_GEN_28 | ~_GEN_27) ? 3'h6 : 3'h0;	// leros/src/main/scala/leros/Decode.scala:33:10, :47:7, :83:17, :91:24, :93:12, :98:12, :103:12, :108:12, :113:12, :117:12, :122:12, :127:12, :132:12, :138:12, :143:12, :149:12, :154:12, :160:12, :166:12, :172:12, :186:12, :193:12, :201:12
  assign io_dout_off =
    _GEN_24
      ? _GEN_1
      : _GEN_23
          ? _GEN_25
          : _GEN_26
              ? _GEN_30
              : _GEN_31 ? _GEN_1 : _GEN_32 ? _GEN_25 : _GEN_33 ? _GEN_30 : _GEN_1;	// leros/src/main/scala/leros/Decode.scala:39:15, :47:7, :89:7, :91:24, :195:11, :203:11, :212:11, :217:11
  assign io_dout_brOff = io_din[11:0];	// leros/src/main/scala/leros/Decode.scala:47:7, :77:19
  assign io_dout_useDecOpd =
    ~_GEN_2
    & (_GEN_3 | ~_GEN_4
       & (_GEN_5 | ~(_GEN_6 | _GEN_7)
          & (_GEN_8 | ~_GEN_9
             & (_GEN_10 | ~_GEN_11
                & (_GEN_12 | ~_GEN_13 & (_GEN_14 | _GEN_15 | _GEN_16 | _GEN_17))))));	// leros/src/main/scala/leros/Decode.scala:37:17, :47:7, :79:27, :91:24, :100:19, :110:19, :124:19, :135:19, :146:19, :157:19, :163:19, :169:19
  assign io_dout_nextState =
    _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10
    | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_29
      ? _GEN
      : _GEN_20
          ? 4'h4
          : _GEN_21
              ? 4'h2
              : _GEN_27
                  ? 4'h3
                  : _GEN_31
                      ? 4'h5
                      : _GEN_32
                          ? 4'h6
                          : _GEN_33
                              ? 4'h7
                              : io_din[15:8] == 8'h40
                                  ? 4'h9
                                  : (&(io_din[15:8])) ? 4'hA : _GEN;	// leros/src/main/scala/leros/Decode.scala:33:10, :38:17, :47:7, :70:{37,60}, :71:49, :72:17, :91:{15,24}, :160:12, :166:12, :172:12, :178:19, :181:19, :184:19, :186:12, :190:19, :193:12, :198:19, :201:12, :206:19, :210:19, :215:19, :220:19, :223:19
  assign io_dout_enaByte = ~_GEN_24 & _GEN_23;	// leros/src/main/scala/leros/Decode.scala:39:15, :47:7, :91:24
  assign io_dout_enaHalf =
    ~(_GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10
      | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17 | _GEN_20
      | _GEN_21 | _GEN_22 | _GEN_23) & _GEN_26;	// leros/src/main/scala/leros/Decode.scala:40:15, :47:7, :91:24
  assign io_dout_isDataAccess =
    ~(_GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8 | _GEN_9 | _GEN_10
      | _GEN_11 | _GEN_12 | _GEN_13 | _GEN_14 | _GEN_15 | _GEN_16 | _GEN_17 | _GEN_28)
    & (_GEN_22 | _GEN_23 | _GEN_26 | _GEN_31 | _GEN_32 | _GEN_33);	// leros/src/main/scala/leros/Decode.scala:33:10, :41:20, :47:7, :91:24, :185:22, :192:22, :200:22, :207:22, :211:22
  assign io_dout_brType = io_din[15:12];	// leros/src/main/scala/leros/Decode.scala:47:7, :69:21
endmodule

module Leros(	// leros/src/main/scala/leros/Leros.scala:13:7
  input         clock,	// leros/src/main/scala/leros/Leros.scala:13:7
                reset,	// leros/src/main/scala/leros/Leros.scala:13:7
  output [9:0]  imemIO_addr,	// leros/src/main/scala/leros/Leros.scala:15:18
  input  [15:0] imemIO_instr,	// leros/src/main/scala/leros/Leros.scala:15:18
  output [15:0] dmemIO_rdAddr,	// leros/src/main/scala/leros/Leros.scala:16:18
  input  [31:0] dmemIO_rdData,	// leros/src/main/scala/leros/Leros.scala:16:18
  output [15:0] dmemIO_wrAddr,	// leros/src/main/scala/leros/Leros.scala:16:18
  output [31:0] dmemIO_wrData,	// leros/src/main/scala/leros/Leros.scala:16:18
  output        dmemIO_wr,	// leros/src/main/scala/leros/Leros.scala:16:18
  output [3:0]  dmemIO_wrMask	// leros/src/main/scala/leros/Leros.scala:16:18
);

  wire [7:0]  vecAccu_3;	// leros/src/main/scala/leros/Leros.scala:50:16, :88:20
  wire [7:0]  vecAccu_2;	// leros/src/main/scala/leros/Leros.scala:50:16, :88:20
  wire [7:0]  vecAccu_1;	// leros/src/main/scala/leros/Leros.scala:50:16, :88:20
  wire [31:0] _dec_io_dout_operand;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [3:0]  _dec_io_dout_enaMask;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [2:0]  _dec_io_dout_op;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [9:0]  _dec_io_dout_off;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [11:0] _dec_io_dout_brOff;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire        _dec_io_dout_useDecOpd;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [3:0]  _dec_io_dout_nextState;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire        _dec_io_dout_enaByte;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire        _dec_io_dout_enaHalf;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire        _dec_io_dout_isDataAccess;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [3:0]  _dec_io_dout_brType;	// leros/src/main/scala/leros/Leros.scala:37:19
  wire [31:0] _alu_io_accu;	// leros/src/main/scala/leros/Leros.scala:18:19
  reg  [9:0]  pcReg;	// leros/src/main/scala/leros/Leros.scala:23:22
  reg  [15:0] addrReg;	// leros/src/main/scala/leros/Leros.scala:24:24
  reg         firstClockReg;	// leros/src/main/scala/leros/Leros.scala:26:30
  wire [9:0]  _dmemIO_wrData_T_6 = pcReg + 10'h1;	// leros/src/main/scala/leros/Leros.scala:23:22, :29:34
  wire [15:0] instr = firstClockReg ? 16'h0 : imemIO_instr;	// leros/src/main/scala/leros/Leros.scala:24:24, :26:30, :33:18
  reg  [31:0] decReg_operand;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg  [3:0]  decReg_enaMask;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg  [2:0]  decReg_op;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg  [11:0] decReg_brOff;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg         decReg_useDecOpd;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg         decReg_enaByte;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg         decReg_enaHalf;	// leros/src/main/scala/leros/Leros.scala:40:23
  reg  [3:0]  decReg_brType;	// leros/src/main/scala/leros/Leros.scala:40:23
  wire [15:0] _effAddr_T_1 = addrReg + {{6{_dec_io_dout_off[9]}}, _dec_io_dout_off};	// leros/src/main/scala/leros/Leros.scala:24:24, :37:19, :44:33
  wire [13:0] memAddr =
    _dec_io_dout_isDataAccess ? _effAddr_T_1[15:2] : {6'h0, instr[7:0]};	// leros/src/main/scala/leros/Leros.scala:33:18, :37:19, :44:33, :45:30, :57:{20,60}
  reg  [13:0] memAddrReg;	// leros/src/main/scala/leros/Leros.scala:58:27
  reg  [1:0]  effAddrOffReg;	// leros/src/main/scala/leros/Leros.scala:59:30
  reg  [3:0]  stateReg;	// leros/src/main/scala/leros/Leros.scala:80:25
  wire        _GEN = stateReg == 4'h1;	// leros/src/main/scala/leros/Leros.scala:80:25, :82:{18,29}, :83:14
  wire        _GEN_0 = stateReg == 4'h2;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire        _GEN_1 = stateReg == 4'h3;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire        _GEN_2 = stateReg == 4'h4;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire        _GEN_3 = stateReg == 4'h5;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire        _GEN_4 = stateReg == 4'h6;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire [7:0]  _GEN_5 = (&effAddrOffReg) ? _alu_io_accu[7:0] : _alu_io_accu[31:24];	// leros/src/main/scala/leros/Leros.scala:18:19, :50:{16,23}, :59:30, :116:30
  wire        _GEN_6 = stateReg == 4'h7;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire [4:0]  _dmemIO_wrMask_T_1 = 5'h3 << effAddrOffReg;	// leros/src/main/scala/leros/Leros.scala:59:30, :122:34
  wire        _GEN_7 = _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3;	// leros/src/main/scala/leros/Leros.scala:65:17, :80:25, :82:{18,29}, :83:14, :88:20
  assign vecAccu_1 =
    _GEN_7 | ~((_GEN_4 | _GEN_6 & effAddrOffReg[1]) & effAddrOffReg == 2'h1)
      ? _alu_io_accu[15:8]
      : _alu_io_accu[7:0];	// leros/src/main/scala/leros/Leros.scala:13:7, :18:19, :50:{16,23}, :59:30, :65:17, :88:20, :116:30, :124:{29,36}
  assign vecAccu_2 =
    _GEN_7 | ~((_GEN_4 | _GEN_6) & effAddrOffReg == 2'h2)
      ? _alu_io_accu[23:16]
      : _alu_io_accu[7:0];	// leros/src/main/scala/leros/Leros.scala:13:7, :18:19, :50:{16,23}, :59:30, :65:17, :88:20, :116:30, :124:36
  assign vecAccu_3 =
    _GEN_7
      ? _alu_io_accu[31:24]
      : _GEN_4
          ? _GEN_5
          : _GEN_6
              ? (effAddrOffReg[1] ? _alu_io_accu[15:8] : _GEN_5)
              : _alu_io_accu[31:24];	// leros/src/main/scala/leros/Leros.scala:18:19, :50:{16,23}, :59:30, :65:17, :88:20, :116:30, :123:30, :124:{29,36}
  wire        _GEN_8 = stateReg == 4'h8;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20
  wire        _GEN_9 = stateReg == 4'h9;	// leros/src/main/scala/leros/Leros.scala:80:25, :88:20, :130:29
  wire [9:0]  pcNext =
    _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_6
      ? _dmemIO_wrData_T_6
      : _GEN_8
          ? (decReg_brType == 4'h8
             | (decReg_brType == 4'h9
                  ? _alu_io_accu == 32'h0
                  : decReg_brType == 4'hA
                      ? (|_alu_io_accu)
                      : decReg_brType == 4'hB
                          ? ~(_alu_io_accu[31])
                          : decReg_brType == 4'hC & _alu_io_accu[31])
               ? pcReg + decReg_brOff[9:0]
               : _dmemIO_wrData_T_6)
          : _GEN_9 ? _alu_io_accu[9:0] : _dmemIO_wrData_T_6;	// leros/src/main/scala/leros/Decode.scala:31:15, leros/src/main/scala/leros/Leros.scala:18:19, :23:22, :29:{27,34}, :40:23, :80:25, :82:{18,29}, :83:14, :88:20, :129:33, :130:29, :131:37, :132:{38,46}, :133:{39,47}, :134:{38,45,50}, :135:{38,45}, :137:23, :138:{16,33}, :143:14
  always @(posedge clock) begin	// leros/src/main/scala/leros/Leros.scala:13:7
    if (reset) begin	// leros/src/main/scala/leros/Leros.scala:13:7
      pcReg <= 10'h3FF;	// leros/src/main/scala/leros/Leros.scala:23:22
      addrReg <= 16'h0;	// leros/src/main/scala/leros/Leros.scala:24:24
      firstClockReg <= 1'h1;	// leros/src/main/scala/leros/Leros.scala:26:30
      decReg_operand <= 32'h0;	// leros/src/main/scala/leros/Decode.scala:31:15, leros/src/main/scala/leros/Leros.scala:40:23
      decReg_enaMask <= 4'h0;	// leros/src/main/scala/leros/Decode.scala:32:15, leros/src/main/scala/leros/Leros.scala:40:23
      decReg_op <= 3'h0;	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
      decReg_brOff <= 12'h0;	// leros/src/main/scala/leros/Decode.scala:35:13, leros/src/main/scala/leros/Leros.scala:40:23
      decReg_useDecOpd <= 1'h0;	// leros/src/main/scala/leros/Leros.scala:27:17, :40:23
      decReg_enaByte <= 1'h0;	// leros/src/main/scala/leros/Leros.scala:27:17, :40:23
      decReg_enaHalf <= 1'h0;	// leros/src/main/scala/leros/Leros.scala:27:17, :40:23
      decReg_brType <= 4'h0;	// leros/src/main/scala/leros/Decode.scala:32:15, leros/src/main/scala/leros/Leros.scala:40:23
      stateReg <= 4'h1;	// leros/src/main/scala/leros/Leros.scala:80:25, :83:14
    end
    else begin	// leros/src/main/scala/leros/Leros.scala:13:7
      if (_GEN) begin	// leros/src/main/scala/leros/Leros.scala:80:25, :82:{18,29}, :83:14
        decReg_operand <= _dec_io_dout_operand;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_enaMask <= _dec_io_dout_enaMask;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_op <= _dec_io_dout_op;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_brOff <= _dec_io_dout_brOff;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_useDecOpd <= _dec_io_dout_useDecOpd;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_enaByte <= _dec_io_dout_enaByte;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_enaHalf <= _dec_io_dout_enaHalf;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        decReg_brType <= _dec_io_dout_brType;	// leros/src/main/scala/leros/Leros.scala:37:19, :40:23
        stateReg <= _dec_io_dout_nextState;	// leros/src/main/scala/leros/Leros.scala:37:19, :80:25
      end
      else begin	// leros/src/main/scala/leros/Leros.scala:80:25, :82:{18,29}, :83:14
        pcReg <= pcNext;	// leros/src/main/scala/leros/Leros.scala:23:22, :29:27, :88:20
        stateReg <= 4'h1;	// leros/src/main/scala/leros/Leros.scala:80:25, :83:14
      end
      if (_GEN | ~_GEN_0) begin	// leros/src/main/scala/leros/Leros.scala:24:24, :80:25, :82:{18,29}, :83:14, :88:20
      end
      else	// leros/src/main/scala/leros/Leros.scala:24:24, :88:20
        addrReg <= dmemIO_rdData[15:0];	// leros/src/main/scala/leros/Leros.scala:24:24, :97:15
      firstClockReg <= 1'h0;	// leros/src/main/scala/leros/Leros.scala:26:30, :27:17
    end
    memAddrReg <= memAddr;	// leros/src/main/scala/leros/Leros.scala:57:20, :58:27
    effAddrOffReg <= _effAddr_T_1[1:0];	// leros/src/main/scala/leros/Leros.scala:44:33, :47:25, :59:30
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// leros/src/main/scala/leros/Leros.scala:13:7
    `ifdef FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/Leros.scala:13:7
      `FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/Leros.scala:13:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:3];	// leros/src/main/scala/leros/Leros.scala:13:7
    initial begin	// leros/src/main/scala/leros/Leros.scala:13:7
      `ifdef INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/Leros.scala:13:7
        `INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/Leros.scala:13:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// leros/src/main/scala/leros/Leros.scala:13:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// leros/src/main/scala/leros/Leros.scala:13:7
        end	// leros/src/main/scala/leros/Leros.scala:13:7
        pcReg = _RANDOM[2'h0][9:0];	// leros/src/main/scala/leros/Leros.scala:13:7, :23:22
        addrReg = _RANDOM[2'h0][25:10];	// leros/src/main/scala/leros/Leros.scala:13:7, :23:22, :24:24
        firstClockReg = _RANDOM[2'h0][26];	// leros/src/main/scala/leros/Leros.scala:13:7, :23:22, :26:30
        decReg_operand = {_RANDOM[2'h0][31:27], _RANDOM[2'h1][26:0]};	// leros/src/main/scala/leros/Leros.scala:13:7, :23:22, :40:23
        decReg_enaMask = _RANDOM[2'h1][30:27];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        decReg_op = {_RANDOM[2'h1][31], _RANDOM[2'h2][1:0]};	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        decReg_brOff = _RANDOM[2'h2][23:12];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        decReg_useDecOpd = _RANDOM[2'h2][25];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        decReg_enaByte = _RANDOM[2'h2][30];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        decReg_enaHalf = _RANDOM[2'h2][31];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        decReg_brType = _RANDOM[2'h3][4:1];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23
        memAddrReg = _RANDOM[2'h3][18:5];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23, :58:27
        effAddrOffReg = _RANDOM[2'h3][20:19];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23, :59:30
        stateReg = _RANDOM[2'h3][25:22];	// leros/src/main/scala/leros/Leros.scala:13:7, :40:23, :80:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/Leros.scala:13:7
      `FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/Leros.scala:13:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AluAccu alu (	// leros/src/main/scala/leros/Leros.scala:18:19
    .clock      (clock),
    .reset      (reset),
    .io_op      (decReg_op),	// leros/src/main/scala/leros/Leros.scala:40:23
    .io_din     (decReg_useDecOpd ? decReg_operand : dmemIO_rdData),	// leros/src/main/scala/leros/Leros.scala:40:23, :75:20
    .io_enaMask (_GEN ? 4'h0 : decReg_enaMask),	// leros/src/main/scala/leros/Decode.scala:32:15, leros/src/main/scala/leros/Leros.scala:40:23, :69:18, :80:25, :82:{18,29}, :83:14, :85:20
    .io_enaByte (decReg_enaByte),	// leros/src/main/scala/leros/Leros.scala:40:23
    .io_enaHalf (decReg_enaHalf),	// leros/src/main/scala/leros/Leros.scala:40:23
    .io_off     (effAddrOffReg),	// leros/src/main/scala/leros/Leros.scala:59:30
    .io_accu    (_alu_io_accu)
  );
  Decode dec (	// leros/src/main/scala/leros/Leros.scala:37:19
    .io_din               (instr),	// leros/src/main/scala/leros/Leros.scala:33:18
    .io_dout_operand      (_dec_io_dout_operand),
    .io_dout_enaMask      (_dec_io_dout_enaMask),
    .io_dout_op           (_dec_io_dout_op),
    .io_dout_off          (_dec_io_dout_off),
    .io_dout_brOff        (_dec_io_dout_brOff),
    .io_dout_useDecOpd    (_dec_io_dout_useDecOpd),
    .io_dout_nextState    (_dec_io_dout_nextState),
    .io_dout_enaByte      (_dec_io_dout_enaByte),
    .io_dout_enaHalf      (_dec_io_dout_enaHalf),
    .io_dout_isDataAccess (_dec_io_dout_isDataAccess),
    .io_dout_brType       (_dec_io_dout_brType)
  );
  assign imemIO_addr = pcNext;	// leros/src/main/scala/leros/Leros.scala:13:7, :29:27, :88:20
  assign dmemIO_rdAddr = {2'h0, memAddr};	// leros/src/main/scala/leros/Leros.scala:13:7, :57:20, :60:17
  assign dmemIO_wrAddr = {2'h0, memAddrReg};	// leros/src/main/scala/leros/Leros.scala:13:7, :58:27, :62:17
  assign dmemIO_wrData =
    _GEN_7
      ? _alu_io_accu
      : _GEN_4
          ? {vecAccu_3, vecAccu_2, vecAccu_1, _alu_io_accu[7:0]}
          : _GEN_6
              ? {vecAccu_3, vecAccu_2, vecAccu_1, _alu_io_accu[7:0]}
              : _GEN_8 | ~_GEN_9 ? _alu_io_accu : {22'h0, _dmemIO_wrData_T_6};	// leros/src/main/scala/leros/Leros.scala:13:7, :18:19, :29:{27,34}, :50:{16,23}, :63:17, :65:17, :88:20, :117:{21,63}, :125:{21,63}, :143:14, :145:21
  assign dmemIO_wr =
    ~(_GEN | _GEN_0 | _GEN_1) & (_GEN_2 | _GEN_3 | _GEN_4 | _GEN_6 | ~_GEN_8 & _GEN_9);	// leros/src/main/scala/leros/Leros.scala:13:7, :64:13, :80:25, :82:{18,29}, :83:14, :88:20, :105:17, :109:17, :114:17, :121:17
  assign dmemIO_wrMask =
    _GEN_7
      ? 4'hF
      : _GEN_4 ? 4'h1 << effAddrOffReg : _GEN_6 ? _dmemIO_wrMask_T_1[3:0] : 4'hF;	// leros/src/main/scala/leros/Leros.scala:13:7, :59:30, :65:17, :83:14, :88:20, :115:{21,34}, :122:{21,34}
endmodule

// external module sram

module DidacticSram(	// src/main/scala/mem/DidacticSpSram.scala:18:7
  input         clock,	// src/main/scala/mem/DidacticSpSram.scala:18:7
                reset,	// src/main/scala/mem/DidacticSpSram.scala:18:7
                io_req,	// src/main/scala/mem/DidacticSpSram.scala:21:14
  input  [7:0]  io_wordAddr,	// src/main/scala/mem/DidacticSpSram.scala:21:14
  input         io_write,	// src/main/scala/mem/DidacticSpSram.scala:21:14
  input  [31:0] io_wrData,	// src/main/scala/mem/DidacticSpSram.scala:21:14
  output [31:0] io_rdData,	// src/main/scala/mem/DidacticSpSram.scala:21:14
  input  [3:0]  io_mask	// src/main/scala/mem/DidacticSpSram.scala:21:14
);

  sram #(
    .DATA_WIDTH(32),
    .INIT_FILE(""),
    .NUM_WORDS(256)
  ) mem (	// src/main/scala/mem/DidacticSpSram.scala:30:41
    .clk_i   (clock),
    .rst_ni  (~reset),	// src/main/scala/mem/DidacticSpSram.scala:35:20
    .req_i   (io_req),
    .we_i    (io_write),
    .addr_i  (io_wordAddr),
    .wdata_i (io_wrData),
    .be_i    (io_mask),
    .rdata_o (io_rdData)
  );
endmodule

module InstructionMemory(	// src/main/scala/dtu/InstructionMemory.scala:30:7
  input         clock,	// src/main/scala/dtu/InstructionMemory.scala:30:7
                reset,	// src/main/scala/dtu/InstructionMemory.scala:30:7
  input  [9:0]  instrPort_addr,	// src/main/scala/dtu/InstructionMemory.scala:36:21
  output [15:0] instrPort_instr,	// src/main/scala/dtu/InstructionMemory.scala:36:21
  input  [9:0]  apbPort_paddr,	// src/main/scala/dtu/InstructionMemory.scala:37:19
  input         apbPort_psel,	// src/main/scala/dtu/InstructionMemory.scala:37:19
                apbPort_penable,	// src/main/scala/dtu/InstructionMemory.scala:37:19
                apbPort_pwrite,	// src/main/scala/dtu/InstructionMemory.scala:37:19
  input  [3:0]  apbPort_pstrb,	// src/main/scala/dtu/InstructionMemory.scala:37:19
  input  [31:0] apbPort_pwdata,	// src/main/scala/dtu/InstructionMemory.scala:37:19
  output        apbPort_pready,	// src/main/scala/dtu/InstructionMemory.scala:37:19
  output [31:0] apbPort_prdata	// src/main/scala/dtu/InstructionMemory.scala:37:19
);

  wire [31:0] _m_io_rdData;	// src/main/scala/mem/DidacticSpSram.scala:8:19
  reg         instrPort_instr_REG;	// src/main/scala/dtu/InstructionMemory.scala:70:35
  always @(posedge clock)	// src/main/scala/dtu/InstructionMemory.scala:30:7
    instrPort_instr_REG <= instrPort_addr[0];	// src/main/scala/dtu/InstructionMemory.scala:70:{35,50}
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/dtu/InstructionMemory.scala:30:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/InstructionMemory.scala:30:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/InstructionMemory.scala:30:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/dtu/InstructionMemory.scala:30:7
    initial begin	// src/main/scala/dtu/InstructionMemory.scala:30:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/dtu/InstructionMemory.scala:30:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/dtu/InstructionMemory.scala:30:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/dtu/InstructionMemory.scala:30:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/dtu/InstructionMemory.scala:30:7
        instrPort_instr_REG = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/dtu/InstructionMemory.scala:30:7, :70:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/InstructionMemory.scala:30:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/InstructionMemory.scala:30:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DidacticSram m (	// src/main/scala/mem/DidacticSpSram.scala:8:19
    .clock       (clock),
    .reset       (reset),
    .io_req      (~apbPort_psel | ~apbPort_pwrite | apbPort_penable & apbPort_pwrite),	// src/main/scala/dtu/InstructionMemory.scala:51:22, :55:{10,27}, :57:32, src/main/scala/mem/DidacticSpSram.scala:46:12
    .io_wordAddr
      (apbPort_psel
         ? (apbPort_pwrite ? apbPort_paddr[9:2] : apbPort_paddr[9:2])
         : instrPort_addr[8:1]),	// src/main/scala/dtu/InstructionMemory.scala:51:22, :55:27, :56:47, :57:51, :59:22, :67:39, src/main/scala/mem/DidacticSpSram.scala:48:17
    .io_write    (apbPort_psel & apbPort_pwrite),	// src/main/scala/dtu/InstructionMemory.scala:51:22, :55:27, src/main/scala/mem/DidacticSpSram.scala:47:14
    .io_wrData   (apbPort_pwdata),
    .io_rdData   (_m_io_rdData),
    .io_mask     (apbPort_pstrb)
  );
  assign instrPort_instr = instrPort_instr_REG ? _m_io_rdData[31:16] : _m_io_rdData[15:0];	// src/main/scala/dtu/InstructionMemory.scala:30:7, :68:19, :69:19, :70:{27,35}, src/main/scala/mem/DidacticSpSram.scala:8:19
  assign apbPort_pready = apbPort_psel & apbPort_penable;	// src/main/scala/dtu/InstructionMemory.scala:30:7, :45:18, :51:22, :53:20
  assign apbPort_prdata = _m_io_rdData;	// src/main/scala/dtu/InstructionMemory.scala:30:7, src/main/scala/mem/DidacticSpSram.scala:8:19
endmodule

module InstrMem(	// leros/src/main/scala/leros/InstrMem.scala:19:7
  input         clock,	// leros/src/main/scala/leros/InstrMem.scala:19:7
                reset,	// leros/src/main/scala/leros/InstrMem.scala:19:7
  input  [9:0]  io_addr,	// leros/src/main/scala/leros/InstrMem.scala:20:14
  output [15:0] io_instr	// leros/src/main/scala/leros/InstrMem.scala:20:14
);

  reg [9:0]  memReg;	// leros/src/main/scala/leros/InstrMem.scala:24:23
  reg [15:0] casez_tmp;	// leros/src/main/scala/leros/InstrMem.scala:27:12
  always_comb begin	// leros/src/main/scala/leros/InstrMem.scala:27:12
    casez (memReg[4:0])	// leros/src/main/scala/leros/InstrMem.scala:24:23, :27:{12,29}
      5'b00000:
        casez_tmp = 16'h0;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00001:
        casez_tmp = 16'h2100;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00010:
        casez_tmp = 16'h2980;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00011:
        casez_tmp = 16'h2A00;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00100:
        casez_tmp = 16'h2B00;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00101:
        casez_tmp = 16'h3001;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00110:
        casez_tmp = 16'h5001;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b00111:
        casez_tmp = 16'h2100;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01000:
        casez_tmp = 16'h3002;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01001:
        casez_tmp = 16'h2002;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01010:
        casez_tmp = 16'h901;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01011:
        casez_tmp = 16'h3002;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01100:
        casez_tmp = 16'h7000;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01101:
        casez_tmp = 16'h7001;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01110:
        casez_tmp = 16'h7002;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b01111:
        casez_tmp = 16'h7003;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10000:
        casez_tmp = 16'h7041;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10001:
        casez_tmp = 16'h2301;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10010:
        casez_tmp = 16'h930;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10011:
        casez_tmp = 16'h7045;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10100:
        casez_tmp = 16'h6000;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10101:
        casez_tmp = 16'hA005;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10110:
        casez_tmp = 16'h21AA;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b10111:
        casez_tmp = 16'h29B0;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11000:
        casez_tmp = 16'h2A28;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11001:
        casez_tmp = 16'h2B00;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11010:
        casez_tmp = 16'hD01;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11011:
        casez_tmp = 16'h0;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11100:
        casez_tmp = 16'hAFFE;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11101:
        casez_tmp = 16'h8FEC;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      5'b11110:
        casez_tmp = 16'h0;	// leros/src/main/scala/leros/InstrMem.scala:27:12
      default:
        casez_tmp = 16'h0;	// leros/src/main/scala/leros/InstrMem.scala:27:12
    endcase	// leros/src/main/scala/leros/InstrMem.scala:24:23, :27:{12,29}
  end // always_comb
  always @(posedge clock) begin	// leros/src/main/scala/leros/InstrMem.scala:19:7
    if (reset)	// leros/src/main/scala/leros/InstrMem.scala:19:7
      memReg <= 10'h0;	// leros/src/main/scala/leros/InstrMem.scala:24:23
    else	// leros/src/main/scala/leros/InstrMem.scala:19:7
      memReg <= io_addr;	// leros/src/main/scala/leros/InstrMem.scala:24:23
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// leros/src/main/scala/leros/InstrMem.scala:19:7
    `ifdef FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/InstrMem.scala:19:7
      `FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/InstrMem.scala:19:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// leros/src/main/scala/leros/InstrMem.scala:19:7
    initial begin	// leros/src/main/scala/leros/InstrMem.scala:19:7
      `ifdef INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/InstrMem.scala:19:7
        `INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/InstrMem.scala:19:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// leros/src/main/scala/leros/InstrMem.scala:19:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// leros/src/main/scala/leros/InstrMem.scala:19:7
        memReg = _RANDOM[/*Zero width*/ 1'b0][9:0];	// leros/src/main/scala/leros/InstrMem.scala:19:7, :24:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/InstrMem.scala:19:7
      `FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/InstrMem.scala:19:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_instr = casez_tmp;	// leros/src/main/scala/leros/InstrMem.scala:19:7, :27:12
endmodule

module RegBlock(	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
  input         clock,	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
                reset,	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
  input  [3:0]  apbPort_paddr,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
  input         apbPort_psel,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
                apbPort_penable,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
                apbPort_pwrite,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
  input  [31:0] apbPort_pwdata,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
  output        apbPort_pready,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
  output [31:0] apbPort_prdata,	// src/main/scala/dtu/peripherals/RegBlock.scala:27:19
  input  [1:0]  dmemPort_rdAddr,	// src/main/scala/dtu/peripherals/RegBlock.scala:28:20
  output [31:0] dmemPort_rdData,	// src/main/scala/dtu/peripherals/RegBlock.scala:28:20
  input  [1:0]  dmemPort_wrAddr,	// src/main/scala/dtu/peripherals/RegBlock.scala:28:20
  input  [31:0] dmemPort_wrData,	// src/main/scala/dtu/peripherals/RegBlock.scala:28:20
  input         dmemPort_wr	// src/main/scala/dtu/peripherals/RegBlock.scala:28:20
);

  reg  [31:0] ibexToLerosRegs_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
  reg  [31:0] ibexToLerosRegs_1;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
  reg  [31:0] ibexToLerosRegs_2;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
  reg  [31:0] ibexToLerosRegs_3;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
  reg  [31:0] lerosToIbexRegs_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
  reg  [31:0] lerosToIbexRegs_1;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
  reg  [31:0] lerosToIbexRegs_2;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
  reg  [31:0] lerosToIbexRegs_3;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
  reg  [1:0]  apbPort_prdata_REG;	// src/main/scala/dtu/peripherals/RegBlock.scala:41:44
  reg  [31:0] casez_tmp;	// src/main/scala/dtu/peripherals/RegBlock.scala:41:18
  always_comb begin	// src/main/scala/dtu/peripherals/RegBlock.scala:41:18
    casez (apbPort_prdata_REG)	// src/main/scala/dtu/peripherals/RegBlock.scala:41:{18,44}
      2'b00:
        casez_tmp = lerosToIbexRegs_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :41:18
      2'b01:
        casez_tmp = lerosToIbexRegs_1;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :41:18
      2'b10:
        casez_tmp = lerosToIbexRegs_2;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :41:18
      default:
        casez_tmp = lerosToIbexRegs_3;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :41:18
    endcase	// src/main/scala/dtu/peripherals/RegBlock.scala:41:{18,44}
  end // always_comb
  wire        apbPort_pready_0 = apbPort_psel & apbPort_penable;	// src/main/scala/dtu/peripherals/RegBlock.scala:43:21
  reg  [1:0]  dmemPort_rdData_REG;	// src/main/scala/dtu/peripherals/RegBlock.scala:52:45
  reg  [31:0] casez_tmp_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:52:19
  always_comb begin	// src/main/scala/dtu/peripherals/RegBlock.scala:52:19
    casez (dmemPort_rdData_REG)	// src/main/scala/dtu/peripherals/RegBlock.scala:52:{19,45}
      2'b00:
        casez_tmp_0 = ibexToLerosRegs_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :52:19
      2'b01:
        casez_tmp_0 = ibexToLerosRegs_1;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :52:19
      2'b10:
        casez_tmp_0 = ibexToLerosRegs_2;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :52:19
      default:
        casez_tmp_0 = ibexToLerosRegs_3;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :52:19
    endcase	// src/main/scala/dtu/peripherals/RegBlock.scala:52:{19,45}
  end // always_comb
  always @(posedge clock) begin	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
    if (reset) begin	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
      ibexToLerosRegs_0 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:{32,40}
      ibexToLerosRegs_1 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:{32,40}
      ibexToLerosRegs_2 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:{32,40}
      ibexToLerosRegs_3 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:{32,40}
      lerosToIbexRegs_0 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:40, :35:32
      lerosToIbexRegs_1 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:40, :35:32
      lerosToIbexRegs_2 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:40, :35:32
      lerosToIbexRegs_3 <= 32'h0;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:40, :35:32
    end
    else begin	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
      if (apbPort_pready_0 & apbPort_pwrite & apbPort_paddr[3:2] == 2'h0)	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :40:31, :43:{21,41}, :46:26, :47:33
        ibexToLerosRegs_0 <= apbPort_pwdata;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
      if (apbPort_pready_0 & apbPort_pwrite & apbPort_paddr[3:2] == 2'h1)	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :40:31, :43:{21,41}, :46:26, :47:33
        ibexToLerosRegs_1 <= apbPort_pwdata;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
      if (apbPort_pready_0 & apbPort_pwrite & apbPort_paddr[3:2] == 2'h2)	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :40:31, :43:{21,41}, :46:26, :47:33
        ibexToLerosRegs_2 <= apbPort_pwdata;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
      if (apbPort_pready_0 & apbPort_pwrite & (&(apbPort_paddr[3:2])))	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32, :40:31, :43:{21,41}, :46:26, :47:33
        ibexToLerosRegs_3 <= apbPort_pwdata;	// src/main/scala/dtu/peripherals/RegBlock.scala:34:32
      if (dmemPort_wr & dmemPort_wrAddr == 2'h0)	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :47:33, :53:21, :54:38
        lerosToIbexRegs_0 <= dmemPort_wrData;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
      if (dmemPort_wr & dmemPort_wrAddr == 2'h1)	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :47:33, :53:21, :54:38
        lerosToIbexRegs_1 <= dmemPort_wrData;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
      if (dmemPort_wr & dmemPort_wrAddr == 2'h2)	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :47:33, :53:21, :54:38
        lerosToIbexRegs_2 <= dmemPort_wrData;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
      if (dmemPort_wr & (&dmemPort_wrAddr))	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32, :53:21, :54:38
        lerosToIbexRegs_3 <= dmemPort_wrData;	// src/main/scala/dtu/peripherals/RegBlock.scala:35:32
    end
    apbPort_prdata_REG <= apbPort_paddr[3:2];	// src/main/scala/dtu/peripherals/RegBlock.scala:40:31, :41:44
    dmemPort_rdData_REG <= dmemPort_rdAddr;	// src/main/scala/dtu/peripherals/RegBlock.scala:52:45
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:8];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
    initial begin	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
        for (logic [3:0] i = 4'h0; i < 4'h9; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
        end	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
        ibexToLerosRegs_0 = _RANDOM[4'h0];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :34:32
        ibexToLerosRegs_1 = _RANDOM[4'h1];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :34:32
        ibexToLerosRegs_2 = _RANDOM[4'h2];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :34:32
        ibexToLerosRegs_3 = _RANDOM[4'h3];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :34:32
        lerosToIbexRegs_0 = _RANDOM[4'h4];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :35:32
        lerosToIbexRegs_1 = _RANDOM[4'h5];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :35:32
        lerosToIbexRegs_2 = _RANDOM[4'h6];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :35:32
        lerosToIbexRegs_3 = _RANDOM[4'h7];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :35:32
        apbPort_prdata_REG = _RANDOM[4'h8][1:0];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :41:44
        dmemPort_rdData_REG = _RANDOM[4'h8][3:2];	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :41:44, :52:45
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign apbPort_pready = apbPort_pready_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :43:21
  assign apbPort_prdata = casez_tmp;	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :41:18
  assign dmemPort_rdData = casez_tmp_0;	// src/main/scala/dtu/peripherals/RegBlock.scala:22:7, :52:19
endmodule

module Gpio(	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
  input         clock,	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
                reset,	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
  input  [1:0]  dmemPort_rdAddr,	// src/main/scala/dtu/peripherals/Gpio.scala:19:20
  output [31:0] dmemPort_rdData,	// src/main/scala/dtu/peripherals/Gpio.scala:19:20
  input  [1:0]  dmemPort_wrAddr,	// src/main/scala/dtu/peripherals/Gpio.scala:19:20
  input  [31:0] dmemPort_wrData,	// src/main/scala/dtu/peripherals/Gpio.scala:19:20
  input         dmemPort_wr,	// src/main/scala/dtu/peripherals/Gpio.scala:19:20
  input  [11:0] gpioPort_in,	// src/main/scala/dtu/peripherals/Gpio.scala:20:20
  output [11:0] gpioPort_out,	// src/main/scala/dtu/peripherals/Gpio.scala:20:20
                gpioPort_outputEnable	// src/main/scala/dtu/peripherals/Gpio.scala:20:20
);

  reg  [11:0] outputEnables;	// src/main/scala/dtu/peripherals/Gpio.scala:22:30
  reg  [11:0] outputs;	// src/main/scala/dtu/peripherals/Gpio.scala:23:24
  reg  [1:0]  dmemPort_rdData_REG;	// src/main/scala/dtu/peripherals/Gpio.scala:26:39
  wire        _GEN = dmemPort_wrAddr == 2'h0;	// src/main/scala/dtu/peripherals/Gpio.scala:35:29
  always @(posedge clock) begin	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
    if (reset) begin	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
      outputEnables <= 12'h0;	// src/main/scala/dtu/peripherals/Gpio.scala:22:30
      outputs <= 12'h0;	// src/main/scala/dtu/peripherals/Gpio.scala:22:30, :23:24
    end
    else begin	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
      if (dmemPort_wr & _GEN)	// src/main/scala/dtu/peripherals/Gpio.scala:22:30, :34:21, :35:29, :37:23
        outputEnables <= dmemPort_wrData[11:0];	// src/main/scala/dtu/peripherals/Gpio.scala:22:30, :37:23
      if (~dmemPort_wr | _GEN | dmemPort_wrAddr != 2'h1) begin	// src/main/scala/dtu/peripherals/Gpio.scala:23:24, :26:72, :34:21, :35:29
      end
      else	// src/main/scala/dtu/peripherals/Gpio.scala:23:24, :34:21, :35:29
        outputs <= dmemPort_wrData[11:0];	// src/main/scala/dtu/peripherals/Gpio.scala:23:24, :37:23
    end
    dmemPort_rdData_REG <= dmemPort_rdAddr;	// src/main/scala/dtu/peripherals/Gpio.scala:26:39
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
    initial begin	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
        outputEnables = _RANDOM[/*Zero width*/ 1'b0][11:0];	// src/main/scala/dtu/peripherals/Gpio.scala:17:7, :22:30
        outputs = _RANDOM[/*Zero width*/ 1'b0][23:12];	// src/main/scala/dtu/peripherals/Gpio.scala:17:7, :22:30, :23:24
        dmemPort_rdData_REG = _RANDOM[/*Zero width*/ 1'b0][25:24];	// src/main/scala/dtu/peripherals/Gpio.scala:17:7, :22:30, :26:39
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/peripherals/Gpio.scala:17:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign dmemPort_rdData =
    {20'h0,
     dmemPort_rdData_REG == 2'h2
       ? gpioPort_in
       : dmemPort_rdData_REG == 2'h1 ? outputs : outputEnables};	// src/main/scala/dtu/peripherals/Gpio.scala:17:7, :22:30, :23:24, :26:{19,39,72}
  assign gpioPort_out = outputs;	// src/main/scala/dtu/peripherals/Gpio.scala:17:7, :23:24
  assign gpioPort_outputEnable = outputEnables;	// src/main/scala/dtu/peripherals/Gpio.scala:17:7, :22:30
endmodule

module DataMemory(	// src/main/scala/dtu/DataMemory.scala:16:7
  input         clock,	// src/main/scala/dtu/DataMemory.scala:16:7
                reset,	// src/main/scala/dtu/DataMemory.scala:16:7
  input  [7:0]  dmemPort_rdAddr,	// src/main/scala/dtu/DataMemory.scala:20:20
  output [31:0] dmemPort_rdData,	// src/main/scala/dtu/DataMemory.scala:20:20
  input  [7:0]  dmemPort_wrAddr,	// src/main/scala/dtu/DataMemory.scala:20:20
  input  [31:0] dmemPort_wrData,	// src/main/scala/dtu/DataMemory.scala:20:20
  input         dmemPort_wr,	// src/main/scala/dtu/DataMemory.scala:20:20
  input  [3:0]  dmemPort_wrMask	// src/main/scala/dtu/DataMemory.scala:20:20
);

  DidacticSram m (	// src/main/scala/mem/DidacticSpSram.scala:8:19
    .clock       (clock),
    .reset       (reset),
    .io_req      (1'h1),	// src/main/scala/mem/DidacticSpSram.scala:46:12
    .io_wordAddr (dmemPort_wr ? dmemPort_wrAddr : dmemPort_rdAddr),	// src/main/scala/dtu/DataMemory.scala:26:21, src/main/scala/mem/DidacticSpSram.scala:48:17, :54:17
    .io_write    (dmemPort_wr),
    .io_wrData   (dmemPort_wrData),
    .io_rdData   (dmemPort_rdData),
    .io_mask     (dmemPort_wrMask)
  );
endmodule

module Buffer(	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
  input        clock,	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
               reset,	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
  output       io_in_ready,	// leros/src/main/scala/leros/uart/UARTRx.scala:70:14
  input        io_in_valid,	// leros/src/main/scala/leros/uart/UARTRx.scala:70:14
  input  [7:0] io_in_bits,	// leros/src/main/scala/leros/uart/UARTRx.scala:70:14
  input        io_out_ready,	// leros/src/main/scala/leros/uart/UARTRx.scala:70:14
  output       io_out_valid,	// leros/src/main/scala/leros/uart/UARTRx.scala:70:14
  output [7:0] io_out_bits	// leros/src/main/scala/leros/uart/UARTRx.scala:70:14
);

  reg       stateReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:80:25
  reg [7:0] dataReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:81:24
  always @(posedge clock) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
    if (reset) begin	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
      stateReg <= 1'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7, :80:25
      dataReg <= 8'h0;	// leros/src/main/scala/leros/uart/UARTRx.scala:81:24
    end
    else begin	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
      if (stateReg)	// leros/src/main/scala/leros/uart/UARTRx.scala:80:25
        stateReg <= ~io_out_ready & stateReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:80:25, :92:24, :93:16
      else	// leros/src/main/scala/leros/uart/UARTRx.scala:80:25
        stateReg <= io_in_valid | stateReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:80:25, :87:23, :89:16
      if (~stateReg & io_in_valid)	// leros/src/main/scala/leros/uart/UARTRx.scala:80:25, :81:24, :83:27, :86:28, :87:23, :88:15
        dataReg <= io_in_bits;	// leros/src/main/scala/leros/uart/UARTRx.scala:81:24
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
    `ifdef FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
      `FIRRTL_BEFORE_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
    initial begin	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
      `ifdef INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
        `INIT_RANDOM_PROLOG_	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
        stateReg = _RANDOM[/*Zero width*/ 1'b0][0];	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7, :80:25
        dataReg = _RANDOM[/*Zero width*/ 1'b0][8:1];	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7, :80:25, :81:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
      `FIRRTL_AFTER_INITIAL	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_ready = ~stateReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7, :80:25, :83:27
  assign io_out_valid = stateReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7, :80:25
  assign io_out_bits = dataReg;	// leros/src/main/scala/leros/uart/UARTRx.scala:69:7, :81:24
endmodule

module BufferedTx(	// leros/src/main/scala/leros/uart/UARTTx.scala:62:7
  input        clock,	// leros/src/main/scala/leros/uart/UARTTx.scala:62:7
               reset,	// leros/src/main/scala/leros/uart/UARTTx.scala:62:7
  output       io_txd,	// leros/src/main/scala/leros/uart/UARTTx.scala:63:14
               io_channel_ready,	// leros/src/main/scala/leros/uart/UARTTx.scala:63:14
  input        io_channel_valid,	// leros/src/main/scala/leros/uart/UARTTx.scala:63:14
  input  [7:0] io_channel_bits	// leros/src/main/scala/leros/uart/UARTTx.scala:63:14
);

  wire       _buf_io_out_valid;	// leros/src/main/scala/leros/uart/UARTTx.scala:68:19
  wire [7:0] _buf_io_out_bits;	// leros/src/main/scala/leros/uart/UARTTx.scala:68:19
  wire       _tx_io_channel_ready;	// leros/src/main/scala/leros/uart/UARTTx.scala:67:18
  Tx tx (	// leros/src/main/scala/leros/uart/UARTTx.scala:67:18
    .clock            (clock),
    .reset            (reset),
    .io_txd           (io_txd),
    .io_channel_ready (_tx_io_channel_ready),
    .io_channel_valid (_buf_io_out_valid),	// leros/src/main/scala/leros/uart/UARTTx.scala:68:19
    .io_channel_bits  (_buf_io_out_bits)	// leros/src/main/scala/leros/uart/UARTTx.scala:68:19
  );
  Buffer buf_0 (	// leros/src/main/scala/leros/uart/UARTTx.scala:68:19
    .clock        (clock),
    .reset        (reset),
    .io_in_ready  (io_channel_ready),
    .io_in_valid  (io_channel_valid),
    .io_in_bits   (io_channel_bits),
    .io_out_ready (_tx_io_channel_ready),	// leros/src/main/scala/leros/uart/UARTTx.scala:67:18
    .io_out_valid (_buf_io_out_valid),
    .io_out_bits  (_buf_io_out_bits)
  );
endmodule

module UARTRx(	// leros/src/main/scala/leros/uart/UARTRx.scala:102:7
  input        clock,	// leros/src/main/scala/leros/uart/UARTRx.scala:102:7
               reset,	// leros/src/main/scala/leros/uart/UARTRx.scala:102:7
               io_rxd,	// leros/src/main/scala/leros/uart/UARTRx.scala:103:14
  output       io_out_valid,	// leros/src/main/scala/leros/uart/UARTRx.scala:103:14
  output [7:0] io_out_bits	// leros/src/main/scala/leros/uart/UARTRx.scala:103:14
);

  wire       _buf_io_in_ready;	// leros/src/main/scala/leros/uart/UARTRx.scala:108:19
  wire       _rx_io_channel_valid;	// leros/src/main/scala/leros/uart/UARTRx.scala:107:18
  wire [7:0] _rx_io_channel_bits;	// leros/src/main/scala/leros/uart/UARTRx.scala:107:18
  Rx rx (	// leros/src/main/scala/leros/uart/UARTRx.scala:107:18
    .clock            (clock),
    .reset            (reset),
    .io_rxd           (io_rxd),
    .io_channel_ready (_buf_io_in_ready),	// leros/src/main/scala/leros/uart/UARTRx.scala:108:19
    .io_channel_valid (_rx_io_channel_valid),
    .io_channel_bits  (_rx_io_channel_bits)
  );
  Buffer buf_0 (	// leros/src/main/scala/leros/uart/UARTRx.scala:108:19
    .clock        (clock),
    .reset        (reset),
    .io_in_ready  (_buf_io_in_ready),
    .io_in_valid  (_rx_io_channel_valid),	// leros/src/main/scala/leros/uart/UARTRx.scala:107:18
    .io_in_bits   (_rx_io_channel_bits),	// leros/src/main/scala/leros/uart/UARTRx.scala:107:18
    .io_out_ready (1'h0),	// leros/src/main/scala/leros/uart/UARTRx.scala:103:14, :108:19
    .io_out_valid (io_out_valid),
    .io_out_bits  (io_out_bits)
  );
endmodule

module Uart(	// src/main/scala/dtu/peripherals/Uart.scala:24:7
  input         clock,	// src/main/scala/dtu/peripherals/Uart.scala:24:7
                reset,	// src/main/scala/dtu/peripherals/Uart.scala:24:7
  output        uartPins_tx,	// src/main/scala/dtu/peripherals/Uart.scala:26:20
  input         uartPins_rx,	// src/main/scala/dtu/peripherals/Uart.scala:26:20
                dmemPort_rdAddr,	// src/main/scala/dtu/peripherals/Uart.scala:27:20
  output [31:0] dmemPort_rdData,	// src/main/scala/dtu/peripherals/Uart.scala:27:20
  input         dmemPort_wrAddr,	// src/main/scala/dtu/peripherals/Uart.scala:27:20
  input  [31:0] dmemPort_wrData,	// src/main/scala/dtu/peripherals/Uart.scala:27:20
  input         dmemPort_wr	// src/main/scala/dtu/peripherals/Uart.scala:27:20
);

  wire       _rx_io_out_valid;	// src/main/scala/dtu/peripherals/Uart.scala:30:18
  wire [7:0] _rx_io_out_bits;	// src/main/scala/dtu/peripherals/Uart.scala:30:18
  wire       _tx_io_channel_ready;	// src/main/scala/dtu/peripherals/Uart.scala:29:18
  reg        REG;	// src/main/scala/dtu/peripherals/Uart.scala:39:15
  always @(posedge clock)	// src/main/scala/dtu/peripherals/Uart.scala:24:7
    REG <= ~dmemPort_rdAddr;	// src/main/scala/dtu/peripherals/Uart.scala:39:{15,32}
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/dtu/peripherals/Uart.scala:24:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/peripherals/Uart.scala:24:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/peripherals/Uart.scala:24:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/dtu/peripherals/Uart.scala:24:7
    initial begin	// src/main/scala/dtu/peripherals/Uart.scala:24:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/dtu/peripherals/Uart.scala:24:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/dtu/peripherals/Uart.scala:24:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/dtu/peripherals/Uart.scala:24:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/dtu/peripherals/Uart.scala:24:7
        REG = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/dtu/peripherals/Uart.scala:24:7, :39:15
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/peripherals/Uart.scala:24:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/peripherals/Uart.scala:24:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  BufferedTx tx (	// src/main/scala/dtu/peripherals/Uart.scala:29:18
    .clock            (clock),
    .reset            (reset),
    .io_txd           (uartPins_tx),
    .io_channel_ready (_tx_io_channel_ready),
    .io_channel_valid (dmemPort_wr & dmemPort_wrAddr),	// src/main/scala/dtu/peripherals/Uart.scala:32:23, :45:21, :46:29
    .io_channel_bits  (dmemPort_wrData[7:0])	// src/main/scala/dtu/peripherals/Uart.scala:33:22
  );
  UARTRx rx (	// src/main/scala/dtu/peripherals/Uart.scala:30:18
    .clock        (clock),
    .reset        (reset),
    .io_rxd       (uartPins_rx),
    .io_out_valid (_rx_io_out_valid),
    .io_out_bits  (_rx_io_out_bits)
  );
  assign dmemPort_rdData =
    REG ? {30'h0, _tx_io_channel_ready, _rx_io_out_valid} : {24'h0, _rx_io_out_bits};	// src/main/scala/dtu/peripherals/Uart.scala:24:7, :29:18, :30:18, :39:{15,42}, :40:21, :42:21
endmodule

module ApbArbiter(	// src/main/scala/apb/ApbArbiter.scala:25:7
  input         clock,	// src/main/scala/apb/ApbArbiter.scala:25:7
                reset,	// src/main/scala/apb/ApbArbiter.scala:25:7
  input  [15:0] io_masters_0_paddr,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input         io_masters_0_psel,	// src/main/scala/apb/ApbArbiter.scala:26:14
                io_masters_0_penable,	// src/main/scala/apb/ApbArbiter.scala:26:14
                io_masters_0_pwrite,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input  [31:0] io_masters_0_pwdata,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output        io_masters_0_pready,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output [31:0] io_masters_0_prdata,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input  [15:0] io_masters_1_paddr,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input         io_masters_1_psel,	// src/main/scala/apb/ApbArbiter.scala:26:14
                io_masters_1_penable,	// src/main/scala/apb/ApbArbiter.scala:26:14
                io_masters_1_pwrite,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input  [3:0]  io_masters_1_pstrb,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input  [31:0] io_masters_1_pwdata,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output        io_masters_1_pready,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output [31:0] io_masters_1_prdata,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output        io_masters_1_pslverr,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output [15:0] io_merged_paddr,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output        io_merged_psel,	// src/main/scala/apb/ApbArbiter.scala:26:14
                io_merged_penable,	// src/main/scala/apb/ApbArbiter.scala:26:14
                io_merged_pwrite,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output [3:0]  io_merged_pstrb,	// src/main/scala/apb/ApbArbiter.scala:26:14
  output [31:0] io_merged_pwdata,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input         io_merged_pready,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input  [31:0] io_merged_prdata,	// src/main/scala/apb/ApbArbiter.scala:26:14
  input         io_merged_pslverr	// src/main/scala/apb/ApbArbiter.scala:26:14
);

  reg  [2:0] stateReg;	// src/main/scala/apb/ApbArbiter.scala:40:25
  wire       _GEN = stateReg == 3'h0;	// src/main/scala/apb/ApbArbiter.scala:40:25, :48:20, :64:18
  wire       _GEN_0 = stateReg == 3'h1;	// src/main/scala/apb/ApbArbiter.scala:40:25, :48:20, :51:18
  wire       _GEN_1 = stateReg == 3'h2;	// src/main/scala/apb/ApbArbiter.scala:40:25, :48:20, :59:16
  wire       _GEN_2 = _GEN_0 | _GEN_1;	// src/main/scala/apb/ApbArbiter.scala:43:31, :48:20, :57:17, :62:17
  wire       _GEN_3 = stateReg == 3'h3;	// src/main/scala/apb/ApbArbiter.scala:40:25, :48:20, :53:18
  wire       _GEN_4 = stateReg == 3'h4;	// src/main/scala/apb/ApbArbiter.scala:40:25, :48:20, :70:16
  wire       _GEN_5 = _GEN | ~_GEN_2;	// src/main/scala/apb/ApbArbiter.scala:42:24, :43:31, :48:20, :57:17, :62:17
  wire       _GEN_6 = _GEN_3 | _GEN_4;	// src/main/scala/apb/ApbArbiter.scala:45:18, :48:20, :68:17, :73:17
  wire       _GEN_7 = _GEN | _GEN_2;	// src/main/scala/apb/ApbArbiter.scala:43:31, :48:20, :57:17, :62:17
  always @(posedge clock) begin	// src/main/scala/apb/ApbArbiter.scala:25:7
    if (reset)	// src/main/scala/apb/ApbArbiter.scala:25:7
      stateReg <= 3'h0;	// src/main/scala/apb/ApbArbiter.scala:40:25, :64:18
    else if (_GEN) begin	// src/main/scala/apb/ApbArbiter.scala:48:20
      if (io_masters_0_psel)	// src/main/scala/apb/ApbArbiter.scala:26:14
        stateReg <= 3'h1;	// src/main/scala/apb/ApbArbiter.scala:40:25, :51:18
      else if (io_masters_1_psel)	// src/main/scala/apb/ApbArbiter.scala:26:14
        stateReg <= 3'h3;	// src/main/scala/apb/ApbArbiter.scala:40:25, :53:18
    end
    else if (_GEN_0)	// src/main/scala/apb/ApbArbiter.scala:48:20
      stateReg <= 3'h2;	// src/main/scala/apb/ApbArbiter.scala:40:25, :59:16
    else if (_GEN_1) begin	// src/main/scala/apb/ApbArbiter.scala:48:20
      if (io_merged_pready)	// src/main/scala/apb/ApbArbiter.scala:26:14
        stateReg <= 3'h0;	// src/main/scala/apb/ApbArbiter.scala:40:25, :64:18
    end
    else if (_GEN_3)	// src/main/scala/apb/ApbArbiter.scala:48:20
      stateReg <= 3'h4;	// src/main/scala/apb/ApbArbiter.scala:40:25, :70:16
    else if (_GEN_4 & io_merged_pready)	// src/main/scala/apb/ApbArbiter.scala:40:25, :48:20, :74:30, :75:18
      stateReg <= 3'h0;	// src/main/scala/apb/ApbArbiter.scala:40:25, :64:18
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/apb/ApbArbiter.scala:25:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/apb/ApbArbiter.scala:25:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/apb/ApbArbiter.scala:25:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/apb/ApbArbiter.scala:25:7
    initial begin	// src/main/scala/apb/ApbArbiter.scala:25:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/apb/ApbArbiter.scala:25:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/apb/ApbArbiter.scala:25:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/apb/ApbArbiter.scala:25:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/apb/ApbArbiter.scala:25:7
        stateReg = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/apb/ApbArbiter.scala:25:7, :40:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/apb/ApbArbiter.scala:25:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/apb/ApbArbiter.scala:25:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_masters_0_pready = ~_GEN & _GEN_2 & io_merged_pready;	// src/main/scala/apb/ApbArbiter.scala:25:7, :43:31, :48:20, :57:17, :62:17
  assign io_masters_0_prdata = io_merged_prdata;	// src/main/scala/apb/ApbArbiter.scala:25:7
  assign io_masters_1_pready = ~_GEN_7 & _GEN_6 & io_merged_pready;	// src/main/scala/apb/ApbArbiter.scala:25:7, :43:31, :45:18, :48:20, :68:17, :73:17
  assign io_masters_1_prdata = io_merged_prdata;	// src/main/scala/apb/ApbArbiter.scala:25:7
  assign io_masters_1_pslverr = ~_GEN_7 & _GEN_6 & io_merged_pslverr;	// src/main/scala/apb/ApbArbiter.scala:25:7, :43:31, :44:32, :45:18, :48:20, :68:17, :73:17
  assign io_merged_paddr = _GEN_5 ? io_masters_1_paddr : io_masters_0_paddr;	// src/main/scala/apb/ApbArbiter.scala:25:7, :42:24, :48:20
  assign io_merged_psel =
    ~_GEN & (_GEN_2 ? io_masters_0_psel : _GEN_6 & io_masters_1_psel);	// src/main/scala/apb/ApbArbiter.scala:25:7, :43:31, :45:18, :48:20, :57:17, :62:17, :68:17, :73:17
  assign io_merged_penable =
    ~(_GEN | _GEN_0)
    & (_GEN_1 ? io_masters_0_penable : ~_GEN_3 & _GEN_4 & io_masters_1_penable);	// src/main/scala/apb/ApbArbiter.scala:25:7, :46:21, :48:20, :58:25, :62:17, :69:25
  assign io_merged_pwrite = _GEN_5 ? io_masters_1_pwrite : io_masters_0_pwrite;	// src/main/scala/apb/ApbArbiter.scala:25:7, :42:24, :48:20
  assign io_merged_pstrb = _GEN_5 ? io_masters_1_pstrb : 4'hF;	// src/main/scala/apb/ApbArbiter.scala:25:7, :26:14, :42:24, :48:20
  assign io_merged_pwdata = _GEN_5 ? io_masters_1_pwdata : io_masters_0_pwdata;	// src/main/scala/apb/ApbArbiter.scala:25:7, :42:24, :48:20
endmodule

module ApbErrorTarget(	// src/main/scala/apb/ApbErrorTarget.scala:5:7
  input  clock,	// src/main/scala/apb/ApbErrorTarget.scala:5:7
         reset,	// src/main/scala/apb/ApbErrorTarget.scala:5:7
         apbPort_psel,	// src/main/scala/apb/ApbErrorTarget.scala:7:19
  output apbPort_pready,	// src/main/scala/apb/ApbErrorTarget.scala:7:19
         apbPort_pslverr	// src/main/scala/apb/ApbErrorTarget.scala:7:19
);

  reg active;	// src/main/scala/apb/ApbErrorTarget.scala:9:23
  always @(posedge clock) begin	// src/main/scala/apb/ApbErrorTarget.scala:5:7
    if (reset)	// src/main/scala/apb/ApbErrorTarget.scala:5:7
      active <= 1'h0;	// src/main/scala/apb/ApbErrorTarget.scala:5:7, :9:23
    else	// src/main/scala/apb/ApbErrorTarget.scala:5:7
      active <= ~active & (apbPort_psel | active);	// src/main/scala/apb/ApbErrorTarget.scala:9:23, :10:16, :11:12, :12:28, :13:12
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/apb/ApbErrorTarget.scala:5:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/apb/ApbErrorTarget.scala:5:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/apb/ApbErrorTarget.scala:5:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/apb/ApbErrorTarget.scala:5:7
    initial begin	// src/main/scala/apb/ApbErrorTarget.scala:5:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/apb/ApbErrorTarget.scala:5:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/apb/ApbErrorTarget.scala:5:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/apb/ApbErrorTarget.scala:5:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/apb/ApbErrorTarget.scala:5:7
        active = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/apb/ApbErrorTarget.scala:5:7, :9:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/apb/ApbErrorTarget.scala:5:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/apb/ApbErrorTarget.scala:5:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign apbPort_pready = active;	// src/main/scala/apb/ApbErrorTarget.scala:5:7, :9:23
  assign apbPort_pslverr = active;	// src/main/scala/apb/ApbErrorTarget.scala:5:7, :9:23
endmodule

module ApbMux(	// src/main/scala/apb/ApbMux.scala:15:7
  input         clock,	// src/main/scala/apb/ApbMux.scala:15:7
                reset,	// src/main/scala/apb/ApbMux.scala:15:7
  input  [15:0] io_master_paddr,	// src/main/scala/apb/ApbMux.scala:21:14
  input         io_master_psel,	// src/main/scala/apb/ApbMux.scala:21:14
                io_master_penable,	// src/main/scala/apb/ApbMux.scala:21:14
                io_master_pwrite,	// src/main/scala/apb/ApbMux.scala:21:14
  input  [3:0]  io_master_pstrb,	// src/main/scala/apb/ApbMux.scala:21:14
  input  [31:0] io_master_pwdata,	// src/main/scala/apb/ApbMux.scala:21:14
  output        io_master_pready,	// src/main/scala/apb/ApbMux.scala:21:14
  output [31:0] io_master_prdata,	// src/main/scala/apb/ApbMux.scala:21:14
  output        io_master_pslverr,	// src/main/scala/apb/ApbMux.scala:21:14
  output [15:0] io_targets_0_paddr,	// src/main/scala/apb/ApbMux.scala:21:14
  output        io_targets_0_psel,	// src/main/scala/apb/ApbMux.scala:21:14
                io_targets_0_penable,	// src/main/scala/apb/ApbMux.scala:21:14
                io_targets_0_pwrite,	// src/main/scala/apb/ApbMux.scala:21:14
  output [3:0]  io_targets_0_pstrb,	// src/main/scala/apb/ApbMux.scala:21:14
  output [31:0] io_targets_0_pwdata,	// src/main/scala/apb/ApbMux.scala:21:14
  input         io_targets_0_pready,	// src/main/scala/apb/ApbMux.scala:21:14
  input  [31:0] io_targets_0_prdata,	// src/main/scala/apb/ApbMux.scala:21:14
  output [15:0] io_targets_1_paddr,	// src/main/scala/apb/ApbMux.scala:21:14
  output        io_targets_1_psel,	// src/main/scala/apb/ApbMux.scala:21:14
                io_targets_1_penable,	// src/main/scala/apb/ApbMux.scala:21:14
                io_targets_1_pwrite,	// src/main/scala/apb/ApbMux.scala:21:14
  output [31:0] io_targets_1_pwdata,	// src/main/scala/apb/ApbMux.scala:21:14
  input         io_targets_1_pready,	// src/main/scala/apb/ApbMux.scala:21:14
  input  [31:0] io_targets_1_prdata,	// src/main/scala/apb/ApbMux.scala:21:14
  output        io_targets_2_psel,	// src/main/scala/apb/ApbMux.scala:21:14
                io_targets_2_penable,	// src/main/scala/apb/ApbMux.scala:21:14
                io_targets_2_pwrite,	// src/main/scala/apb/ApbMux.scala:21:14
  output [31:0] io_targets_2_pwdata,	// src/main/scala/apb/ApbMux.scala:21:14
  input         io_targets_2_pready,	// src/main/scala/apb/ApbMux.scala:21:14
  input  [31:0] io_targets_2_prdata	// src/main/scala/apb/ApbMux.scala:21:14
);

  wire _errorTarget_apbPort_pready;	// src/main/scala/apb/ApbMux.scala:34:27
  wire _errorTarget_apbPort_pslverr;	// src/main/scala/apb/ApbMux.scala:34:27
  wire selected = io_master_psel & io_master_paddr[15:10] == 6'h0;	// src/main/scala/apb/ApbMux.scala:57:{35,53}, :60:7
  wire selected_1 = io_master_psel & io_master_paddr[15:4] == 12'h80;	// src/main/scala/apb/ApbMux.scala:57:{35,53}, :60:7
  wire selected_2 = io_master_psel & io_master_paddr[15:2] == 14'h300;	// src/main/scala/apb/ApbMux.scala:57:{35,53}, :60:7
  wire _GEN = selected_2 | selected_1 | selected;	// src/main/scala/apb/ApbMux.scala:35:23, :57:35, :62:20, :63:32
  ApbErrorTarget errorTarget (	// src/main/scala/apb/ApbMux.scala:34:27
    .clock           (clock),
    .reset           (reset),
    .apbPort_psel    (~_GEN & io_master_psel),	// src/main/scala/apb/ApbMux.scala:35:23, :62:20, :63:32
    .apbPort_pready  (_errorTarget_apbPort_pready),
    .apbPort_pslverr (_errorTarget_apbPort_pslverr)
  );
  assign io_master_pready =
    selected_2
      ? io_targets_2_pready
      : selected_1
          ? io_targets_1_pready
          : selected ? io_targets_0_pready : _errorTarget_apbPort_pready;	// src/main/scala/apb/ApbMux.scala:15:7, :34:27, :35:23, :57:35, :62:20, :65:24
  assign io_master_prdata =
    selected_2
      ? io_targets_2_prdata
      : selected_1 ? io_targets_1_prdata : selected ? io_targets_0_prdata : 32'h0;	// src/main/scala/apb/ApbMux.scala:15:7, :34:27, :35:23, :57:35, :62:20, :66:24
  assign io_master_pslverr = ~_GEN & _errorTarget_apbPort_pslverr;	// src/main/scala/apb/ApbMux.scala:15:7, :34:27, :35:23, :62:20, :63:32, :67:25
  assign io_targets_0_paddr = io_master_paddr;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_0_psel = selected;	// src/main/scala/apb/ApbMux.scala:15:7, :57:35
  assign io_targets_0_penable = io_master_penable;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_0_pwrite = io_master_pwrite;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_0_pstrb = io_master_pstrb;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_0_pwdata = io_master_pwdata;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_1_paddr = io_master_paddr;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_1_psel = selected_1;	// src/main/scala/apb/ApbMux.scala:15:7, :57:35
  assign io_targets_1_penable = io_master_penable;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_1_pwrite = io_master_pwrite;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_1_pwdata = io_master_pwdata;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_2_psel = selected_2;	// src/main/scala/apb/ApbMux.scala:15:7, :57:35
  assign io_targets_2_penable = io_master_penable;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_2_pwrite = io_master_pwrite;	// src/main/scala/apb/ApbMux.scala:15:7
  assign io_targets_2_pwdata = io_master_pwdata;	// src/main/scala/apb/ApbMux.scala:15:7
endmodule

module DataMemMux(	// src/main/scala/dtu/DataMemMux.scala:21:7
  input         clock,	// src/main/scala/dtu/DataMemMux.scala:21:7
                reset,	// src/main/scala/dtu/DataMemMux.scala:21:7
  input  [15:0] io_master_rdAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [31:0] io_master_rdData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [15:0] io_master_wrAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [31:0] io_master_wrData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input         io_master_wr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [3:0]  io_master_wrMask,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_0_rdAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [31:0] io_targets_0_rdData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_0_wrAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [31:0] io_targets_0_wrData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output        io_targets_0_wr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [3:0]  io_targets_0_wrMask,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_1_rdAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [31:0] io_targets_1_rdData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_1_wrAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [31:0] io_targets_1_wrData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output        io_targets_1_wr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_2_rdAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [31:0] io_targets_2_rdData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_2_wrAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [31:0] io_targets_2_wrData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output        io_targets_2_wr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_3_rdAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  input  [31:0] io_targets_3_rdData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [15:0] io_targets_3_wrAddr,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output [31:0] io_targets_3_wrData,	// src/main/scala/dtu/DataMemMux.scala:26:14
  output        io_targets_3_wr	// src/main/scala/dtu/DataMemMux.scala:26:14
);

  reg REG;	// src/main/scala/dtu/DataMemMux.scala:62:17
  reg REG_1;	// src/main/scala/dtu/DataMemMux.scala:62:17
  reg REG_2;	// src/main/scala/dtu/DataMemMux.scala:62:17
  reg REG_3;	// src/main/scala/dtu/DataMemMux.scala:62:17
  always @(posedge clock) begin	// src/main/scala/dtu/DataMemMux.scala:21:7
    if (reset) begin	// src/main/scala/dtu/DataMemMux.scala:21:7
      REG <= 1'h0;	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
      REG_1 <= 1'h0;	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
      REG_2 <= 1'h0;	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
      REG_3 <= 1'h0;	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
    end
    else begin	// src/main/scala/dtu/DataMemMux.scala:21:7
      REG <= io_master_rdAddr[15:8] == 8'h0;	// src/main/scala/dtu/DataMemMux.scala:56:38, :59:7, :62:17
      REG_1 <= io_master_rdAddr[15:2] == 14'h800;	// src/main/scala/dtu/DataMemMux.scala:56:38, :59:7, :62:17
      REG_2 <= io_master_rdAddr[15:2] == 14'h810;	// src/main/scala/dtu/DataMemMux.scala:56:38, :59:7, :62:17
      REG_3 <= io_master_rdAddr[15:1] == 15'h1022;	// src/main/scala/dtu/DataMemMux.scala:56:38, :59:7, :62:17
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/dtu/DataMemMux.scala:21:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/DataMemMux.scala:21:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/dtu/DataMemMux.scala:21:7
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// src/main/scala/dtu/DataMemMux.scala:21:7
    initial begin	// src/main/scala/dtu/DataMemMux.scala:21:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/dtu/DataMemMux.scala:21:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/dtu/DataMemMux.scala:21:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/dtu/DataMemMux.scala:21:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/dtu/DataMemMux.scala:21:7
        REG = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
        REG_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
        REG_2 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
        REG_3 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/dtu/DataMemMux.scala:21:7, :62:17
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/DataMemMux.scala:21:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/dtu/DataMemMux.scala:21:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_master_rdData =
    REG_3
      ? io_targets_3_rdData
      : REG_2
          ? io_targets_2_rdData
          : REG_1 ? io_targets_1_rdData : REG ? io_targets_0_rdData : io_targets_3_rdData;	// src/main/scala/dtu/DataMemMux.scala:21:7, :49:7, :62:{17,36}, :63:24
  assign io_targets_0_rdAddr = io_master_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_0_wrAddr = io_master_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_0_wrData = io_master_wrData;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_0_wr = io_master_wr & io_master_wrAddr[15:8] == 8'h0;	// src/main/scala/dtu/DataMemMux.scala:21:7, :59:7, :67:38, :70:7, :71:29
  assign io_targets_0_wrMask = io_master_wrMask;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_1_rdAddr = io_master_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_1_wrAddr = io_master_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_1_wrData = io_master_wrData;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_1_wr = io_master_wr & io_master_wrAddr[15:2] == 14'h800;	// src/main/scala/dtu/DataMemMux.scala:21:7, :59:7, :67:38, :70:7, :71:29
  assign io_targets_2_rdAddr = io_master_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_2_wrAddr = io_master_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_2_wrData = io_master_wrData;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_2_wr = io_master_wr & io_master_wrAddr[15:2] == 14'h810;	// src/main/scala/dtu/DataMemMux.scala:21:7, :59:7, :67:38, :70:7, :71:29
  assign io_targets_3_rdAddr = io_master_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_3_wrAddr = io_master_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_3_wrData = io_master_wrData;	// src/main/scala/dtu/DataMemMux.scala:21:7
  assign io_targets_3_wr = io_master_wr & io_master_wrAddr[15:1] == 15'h1022;	// src/main/scala/dtu/DataMemMux.scala:21:7, :59:7, :67:38, :70:7, :71:29
endmodule

module DtuSubsystem(	// src/main/scala/dtu/DtuSubsystem.scala:71:7
  input         clock,	// src/main/scala/dtu/DtuSubsystem.scala:71:7
                reset,	// src/main/scala/dtu/DtuSubsystem.scala:71:7
  input  [11:0] io_apb_paddr,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  input         io_apb_psel,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
                io_apb_penable,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
                io_apb_pwrite,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  input  [3:0]  io_apb_pstrb,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  input  [31:0] io_apb_pwdata,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  output        io_apb_pready,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  output [31:0] io_apb_prdata,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  output        io_apb_pslverr,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
                io_irq,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  input         io_irqEn,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  input  [7:0]  io_ssCtrl,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  input  [15:0] io_gpio_in,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
  output [15:0] io_gpio_out,	// src/main/scala/dtu/DtuSubsystem.scala:73:14
                io_gpio_outputEnable	// src/main/scala/dtu/DtuSubsystem.scala:73:14
);

  wire [31:0] _dmemMux_io_master_rdData;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_0_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_0_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [31:0] _dmemMux_io_targets_0_wrData;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire        _dmemMux_io_targets_0_wr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [3:0]  _dmemMux_io_targets_0_wrMask;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_1_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_1_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [31:0] _dmemMux_io_targets_1_wrData;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire        _dmemMux_io_targets_1_wr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_2_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_2_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [31:0] _dmemMux_io_targets_2_wrData;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire        _dmemMux_io_targets_2_wr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_3_rdAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [15:0] _dmemMux_io_targets_3_wrAddr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire [31:0] _dmemMux_io_targets_3_wrData;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire        _dmemMux_io_targets_3_wr;	// src/main/scala/dtu/DataMemMux.scala:116:25
  wire        _apbMux_io_master_pready;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [31:0] _apbMux_io_master_prdata;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_master_pslverr;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [15:0] _apbMux_io_targets_0_paddr;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_0_psel;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_0_penable;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_0_pwrite;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [3:0]  _apbMux_io_targets_0_pstrb;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [31:0] _apbMux_io_targets_0_pwdata;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [15:0] _apbMux_io_targets_1_paddr;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_1_psel;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_1_penable;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_1_pwrite;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [31:0] _apbMux_io_targets_1_pwdata;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_2_psel;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_2_penable;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _apbMux_io_targets_2_pwrite;	// src/main/scala/apb/ApbMux.scala:96:24
  wire [31:0] _apbMux_io_targets_2_pwdata;	// src/main/scala/apb/ApbMux.scala:96:24
  wire        _arb_io_masters_0_pready;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire [31:0] _arb_io_masters_0_prdata;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire [15:0] _arb_io_merged_paddr;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire        _arb_io_merged_psel;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire        _arb_io_merged_penable;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire        _arb_io_merged_pwrite;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire [3:0]  _arb_io_merged_pstrb;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire [31:0] _arb_io_merged_pwdata;	// src/main/scala/apb/ApbArbiter.scala:11:21
  wire        _uart_uartPins_tx;	// src/main/scala/dtu/DtuSubsystem.scala:93:20
  wire [31:0] _uart_dmemPort_rdData;	// src/main/scala/dtu/DtuSubsystem.scala:93:20
  wire [31:0] _dmem_dmemPort_rdData;	// src/main/scala/dtu/DtuSubsystem.scala:92:20
  wire [31:0] _gpio_dmemPort_rdData;	// src/main/scala/dtu/DtuSubsystem.scala:91:20
  wire [11:0] _gpio_gpioPort_out;	// src/main/scala/dtu/DtuSubsystem.scala:91:20
  wire [11:0] _gpio_gpioPort_outputEnable;	// src/main/scala/dtu/DtuSubsystem.scala:91:20
  wire        _regBlock_apbPort_pready;	// src/main/scala/dtu/DtuSubsystem.scala:90:24
  wire [31:0] _regBlock_apbPort_prdata;	// src/main/scala/dtu/DtuSubsystem.scala:90:24
  wire [31:0] _regBlock_dmemPort_rdData;	// src/main/scala/dtu/DtuSubsystem.scala:90:24
  wire [15:0] _rom_io_instr;	// src/main/scala/dtu/DtuSubsystem.scala:87:19
  wire [15:0] _instrMem_instrPort_instr;	// src/main/scala/dtu/DtuSubsystem.scala:86:24
  wire        _instrMem_apbPort_pready;	// src/main/scala/dtu/DtuSubsystem.scala:86:24
  wire [31:0] _instrMem_apbPort_prdata;	// src/main/scala/dtu/DtuSubsystem.scala:86:24
  wire [9:0]  _leros_imemIO_addr;	// src/main/scala/dtu/DtuSubsystem.scala:83:21
  wire [15:0] _leros_dmemIO_rdAddr;	// src/main/scala/dtu/DtuSubsystem.scala:83:21
  wire [15:0] _leros_dmemIO_wrAddr;	// src/main/scala/dtu/DtuSubsystem.scala:83:21
  wire [31:0] _leros_dmemIO_wrData;	// src/main/scala/dtu/DtuSubsystem.scala:83:21
  wire        _leros_dmemIO_wr;	// src/main/scala/dtu/DtuSubsystem.scala:83:21
  wire [3:0]  _leros_dmemIO_wrMask;	// src/main/scala/dtu/DtuSubsystem.scala:83:21
  wire        _ponte_io_uart_tx;	// src/main/scala/dtu/DtuSubsystem.scala:80:21
  wire [15:0] _ponte_io_apb_paddr;	// src/main/scala/dtu/DtuSubsystem.scala:80:21
  wire        _ponte_io_apb_psel;	// src/main/scala/dtu/DtuSubsystem.scala:80:21
  wire        _ponte_io_apb_penable;	// src/main/scala/dtu/DtuSubsystem.scala:80:21
  wire        _ponte_io_apb_pwrite;	// src/main/scala/dtu/DtuSubsystem.scala:80:21
  wire [31:0] _ponte_io_apb_pwdata;	// src/main/scala/dtu/DtuSubsystem.scala:80:21
  wire        _sysCtrl_apbPort_pready;	// src/main/scala/dtu/DtuSubsystem.scala:79:23
  wire [31:0] _sysCtrl_apbPort_prdata;	// src/main/scala/dtu/DtuSubsystem.scala:79:23
  wire        _sysCtrl_ctrlPort_lerosReset;	// src/main/scala/dtu/DtuSubsystem.scala:79:23
  wire        _sysCtrl_ctrlPort_lerosBootFromRam;	// src/main/scala/dtu/DtuSubsystem.scala:79:23
  wire        _sysCtrl_ctrlPort_lerosUartLoopBack;	// src/main/scala/dtu/DtuSubsystem.scala:79:23
  SystemControl sysCtrl (	// src/main/scala/dtu/DtuSubsystem.scala:79:23
    .clock                      (clock),
    .reset                      (reset),
    .apbPort_psel               (_apbMux_io_targets_2_psel),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_penable            (_apbMux_io_targets_2_penable),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pwrite             (_apbMux_io_targets_2_pwrite),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pwdata             (_apbMux_io_targets_2_pwdata),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pready             (_sysCtrl_apbPort_pready),
    .apbPort_prdata             (_sysCtrl_apbPort_prdata),
    .ctrlPort_lerosReset        (_sysCtrl_ctrlPort_lerosReset),
    .ctrlPort_lerosBootFromRam  (_sysCtrl_ctrlPort_lerosBootFromRam),
    .ctrlPort_lerosUartLoopBack (_sysCtrl_ctrlPort_lerosUartLoopBack)
  );
  Ponte ponte (	// src/main/scala/dtu/DtuSubsystem.scala:80:21
    .clock          (clock),
    .reset          (reset),
    .io_uart_tx     (_ponte_io_uart_tx),
    .io_uart_rx     (io_gpio_in[1]),	// src/main/scala/dtu/DtuSubsystem.scala:77:27
    .io_apb_paddr   (_ponte_io_apb_paddr),
    .io_apb_psel    (_ponte_io_apb_psel),
    .io_apb_penable (_ponte_io_apb_penable),
    .io_apb_pwrite  (_ponte_io_apb_pwrite),
    .io_apb_pwdata  (_ponte_io_apb_pwdata),
    .io_apb_pready  (_arb_io_masters_0_pready),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_apb_prdata  (_arb_io_masters_0_prdata)	// src/main/scala/apb/ApbArbiter.scala:11:21
  );
  Leros leros (	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .clock         (clock),
    .reset         (reset | _sysCtrl_ctrlPort_lerosReset),	// src/main/scala/dtu/DtuSubsystem.scala:79:23, :84:31
    .imemIO_addr   (_leros_imemIO_addr),
    .imemIO_instr
      (_sysCtrl_ctrlPort_lerosBootFromRam ? _instrMem_instrPort_instr : _rom_io_instr),	// src/main/scala/dtu/DtuSubsystem.scala:79:23, :86:24, :87:19, :98:28
    .dmemIO_rdAddr (_leros_dmemIO_rdAddr),
    .dmemIO_rdData (_dmemMux_io_master_rdData),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .dmemIO_wrAddr (_leros_dmemIO_wrAddr),
    .dmemIO_wrData (_leros_dmemIO_wrData),
    .dmemIO_wr     (_leros_dmemIO_wr),
    .dmemIO_wrMask (_leros_dmemIO_wrMask)
  );
  InstructionMemory instrMem (	// src/main/scala/dtu/DtuSubsystem.scala:86:24
    .clock           (clock),
    .reset           (reset),
    .instrPort_addr  (_leros_imemIO_addr),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .instrPort_instr (_instrMem_instrPort_instr),
    .apbPort_paddr   (_apbMux_io_targets_0_paddr[9:0]),	// src/main/scala/apb/ApbMux.scala:96:24, :102:16
    .apbPort_psel    (_apbMux_io_targets_0_psel),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_penable (_apbMux_io_targets_0_penable),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pwrite  (_apbMux_io_targets_0_pwrite),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pstrb   (_apbMux_io_targets_0_pstrb),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pwdata  (_apbMux_io_targets_0_pwdata),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pready  (_instrMem_apbPort_pready),
    .apbPort_prdata  (_instrMem_apbPort_prdata)
  );
  InstrMem rom (	// src/main/scala/dtu/DtuSubsystem.scala:87:19
    .clock    (clock),
    .reset    (reset),
    .io_addr  (_leros_imemIO_addr),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .io_instr (_rom_io_instr)
  );
  RegBlock regBlock (	// src/main/scala/dtu/DtuSubsystem.scala:90:24
    .clock           (clock),
    .reset           (reset),
    .apbPort_paddr   (_apbMux_io_targets_1_paddr[3:0]),	// src/main/scala/apb/ApbMux.scala:96:24, :102:16
    .apbPort_psel    (_apbMux_io_targets_1_psel),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_penable (_apbMux_io_targets_1_penable),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pwrite  (_apbMux_io_targets_1_pwrite),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pwdata  (_apbMux_io_targets_1_pwdata),	// src/main/scala/apb/ApbMux.scala:96:24
    .apbPort_pready  (_regBlock_apbPort_pready),
    .apbPort_prdata  (_regBlock_apbPort_prdata),
    .dmemPort_rdAddr (_dmemMux_io_targets_1_rdAddr[1:0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_rdData (_regBlock_dmemPort_rdData),
    .dmemPort_wrAddr (_dmemMux_io_targets_1_wrAddr[1:0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_wrData (_dmemMux_io_targets_1_wrData),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .dmemPort_wr     (_dmemMux_io_targets_1_wr)	// src/main/scala/dtu/DataMemMux.scala:116:25
  );
  Gpio gpio (	// src/main/scala/dtu/DtuSubsystem.scala:91:20
    .clock                 (clock),
    .reset                 (reset),
    .dmemPort_rdAddr       (_dmemMux_io_targets_2_rdAddr[1:0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_rdData       (_gpio_dmemPort_rdData),
    .dmemPort_wrAddr       (_dmemMux_io_targets_2_wrAddr[1:0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_wrData       (_dmemMux_io_targets_2_wrData),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .dmemPort_wr           (_dmemMux_io_targets_2_wr),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .gpioPort_in           (io_gpio_in[15:4]),	// src/main/scala/dtu/DtuSubsystem.scala:126:33
    .gpioPort_out          (_gpio_gpioPort_out),
    .gpioPort_outputEnable (_gpio_gpioPort_outputEnable)
  );
  DataMemory dmem (	// src/main/scala/dtu/DtuSubsystem.scala:92:20
    .clock           (clock),
    .reset           (reset),
    .dmemPort_rdAddr (_dmemMux_io_targets_0_rdAddr[7:0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_rdData (_dmem_dmemPort_rdData),
    .dmemPort_wrAddr (_dmemMux_io_targets_0_wrAddr[7:0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_wrData (_dmemMux_io_targets_0_wrData),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .dmemPort_wr     (_dmemMux_io_targets_0_wr),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .dmemPort_wrMask (_dmemMux_io_targets_0_wrMask)	// src/main/scala/dtu/DataMemMux.scala:116:25
  );
  Uart uart (	// src/main/scala/dtu/DtuSubsystem.scala:93:20
    .clock           (clock),
    .reset           (reset),
    .uartPins_tx     (_uart_uartPins_tx),
    .uartPins_rx
      (_sysCtrl_ctrlPort_lerosUartLoopBack ? _uart_uartPins_tx : io_gpio_in[3]),	// src/main/scala/dtu/DtuSubsystem.scala:76:27, :79:23, :93:20, :94:26
    .dmemPort_rdAddr (_dmemMux_io_targets_3_rdAddr[0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_rdData (_uart_dmemPort_rdData),
    .dmemPort_wrAddr (_dmemMux_io_targets_3_wrAddr[0]),	// src/main/scala/dtu/DataMemMux.scala:116:25, :127:16
    .dmemPort_wrData (_dmemMux_io_targets_3_wrData),	// src/main/scala/dtu/DataMemMux.scala:116:25
    .dmemPort_wr     (_dmemMux_io_targets_3_wr)	// src/main/scala/dtu/DataMemMux.scala:116:25
  );
  ApbArbiter arb (	// src/main/scala/apb/ApbArbiter.scala:11:21
    .clock                (clock),
    .reset                (reset),
    .io_masters_0_paddr   (_ponte_io_apb_paddr),	// src/main/scala/dtu/DtuSubsystem.scala:80:21
    .io_masters_0_psel    (_ponte_io_apb_psel),	// src/main/scala/dtu/DtuSubsystem.scala:80:21
    .io_masters_0_penable (_ponte_io_apb_penable),	// src/main/scala/dtu/DtuSubsystem.scala:80:21
    .io_masters_0_pwrite  (_ponte_io_apb_pwrite),	// src/main/scala/dtu/DtuSubsystem.scala:80:21
    .io_masters_0_pwdata  (_ponte_io_apb_pwdata),	// src/main/scala/dtu/DtuSubsystem.scala:80:21
    .io_masters_0_pready  (_arb_io_masters_0_pready),
    .io_masters_0_prdata  (_arb_io_masters_0_prdata),
    .io_masters_1_paddr   ({4'h0, io_apb_paddr}),	// src/main/scala/apb/ApbArbiter.scala:17:23
    .io_masters_1_psel    (io_apb_psel),
    .io_masters_1_penable (io_apb_penable),
    .io_masters_1_pwrite  (io_apb_pwrite),
    .io_masters_1_pstrb   (io_apb_pstrb),
    .io_masters_1_pwdata  (io_apb_pwdata),
    .io_masters_1_pready  (io_apb_pready),
    .io_masters_1_prdata  (io_apb_prdata),
    .io_masters_1_pslverr (io_apb_pslverr),
    .io_merged_paddr      (_arb_io_merged_paddr),
    .io_merged_psel       (_arb_io_merged_psel),
    .io_merged_penable    (_arb_io_merged_penable),
    .io_merged_pwrite     (_arb_io_merged_pwrite),
    .io_merged_pstrb      (_arb_io_merged_pstrb),
    .io_merged_pwdata     (_arb_io_merged_pwdata),
    .io_merged_pready     (_apbMux_io_master_pready),	// src/main/scala/apb/ApbMux.scala:96:24
    .io_merged_prdata     (_apbMux_io_master_prdata),	// src/main/scala/apb/ApbMux.scala:96:24
    .io_merged_pslverr    (_apbMux_io_master_pslverr)	// src/main/scala/apb/ApbMux.scala:96:24
  );
  ApbMux apbMux (	// src/main/scala/apb/ApbMux.scala:96:24
    .clock                (clock),
    .reset                (reset),
    .io_master_paddr      (_arb_io_merged_paddr),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_master_psel       (_arb_io_merged_psel),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_master_penable    (_arb_io_merged_penable),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_master_pwrite     (_arb_io_merged_pwrite),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_master_pstrb      (_arb_io_merged_pstrb),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_master_pwdata     (_arb_io_merged_pwdata),	// src/main/scala/apb/ApbArbiter.scala:11:21
    .io_master_pready     (_apbMux_io_master_pready),
    .io_master_prdata     (_apbMux_io_master_prdata),
    .io_master_pslverr    (_apbMux_io_master_pslverr),
    .io_targets_0_paddr   (_apbMux_io_targets_0_paddr),
    .io_targets_0_psel    (_apbMux_io_targets_0_psel),
    .io_targets_0_penable (_apbMux_io_targets_0_penable),
    .io_targets_0_pwrite  (_apbMux_io_targets_0_pwrite),
    .io_targets_0_pstrb   (_apbMux_io_targets_0_pstrb),
    .io_targets_0_pwdata  (_apbMux_io_targets_0_pwdata),
    .io_targets_0_pready  (_instrMem_apbPort_pready),	// src/main/scala/dtu/DtuSubsystem.scala:86:24
    .io_targets_0_prdata  (_instrMem_apbPort_prdata),	// src/main/scala/dtu/DtuSubsystem.scala:86:24
    .io_targets_1_paddr   (_apbMux_io_targets_1_paddr),
    .io_targets_1_psel    (_apbMux_io_targets_1_psel),
    .io_targets_1_penable (_apbMux_io_targets_1_penable),
    .io_targets_1_pwrite  (_apbMux_io_targets_1_pwrite),
    .io_targets_1_pwdata  (_apbMux_io_targets_1_pwdata),
    .io_targets_1_pready  (_regBlock_apbPort_pready),	// src/main/scala/dtu/DtuSubsystem.scala:90:24
    .io_targets_1_prdata  (_regBlock_apbPort_prdata),	// src/main/scala/dtu/DtuSubsystem.scala:90:24
    .io_targets_2_psel    (_apbMux_io_targets_2_psel),
    .io_targets_2_penable (_apbMux_io_targets_2_penable),
    .io_targets_2_pwrite  (_apbMux_io_targets_2_pwrite),
    .io_targets_2_pwdata  (_apbMux_io_targets_2_pwdata),
    .io_targets_2_pready  (_sysCtrl_apbPort_pready),	// src/main/scala/dtu/DtuSubsystem.scala:79:23
    .io_targets_2_prdata  (_sysCtrl_apbPort_prdata)	// src/main/scala/dtu/DtuSubsystem.scala:79:23
  );
  DataMemMux dmemMux (	// src/main/scala/dtu/DataMemMux.scala:116:25
    .clock               (clock),
    .reset               (reset),
    .io_master_rdAddr    (_leros_dmemIO_rdAddr),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .io_master_rdData    (_dmemMux_io_master_rdData),
    .io_master_wrAddr    (_leros_dmemIO_wrAddr),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .io_master_wrData    (_leros_dmemIO_wrData),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .io_master_wr        (_leros_dmemIO_wr),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .io_master_wrMask    (_leros_dmemIO_wrMask),	// src/main/scala/dtu/DtuSubsystem.scala:83:21
    .io_targets_0_rdAddr (_dmemMux_io_targets_0_rdAddr),
    .io_targets_0_rdData (_dmem_dmemPort_rdData),	// src/main/scala/dtu/DtuSubsystem.scala:92:20
    .io_targets_0_wrAddr (_dmemMux_io_targets_0_wrAddr),
    .io_targets_0_wrData (_dmemMux_io_targets_0_wrData),
    .io_targets_0_wr     (_dmemMux_io_targets_0_wr),
    .io_targets_0_wrMask (_dmemMux_io_targets_0_wrMask),
    .io_targets_1_rdAddr (_dmemMux_io_targets_1_rdAddr),
    .io_targets_1_rdData (_regBlock_dmemPort_rdData),	// src/main/scala/dtu/DtuSubsystem.scala:90:24
    .io_targets_1_wrAddr (_dmemMux_io_targets_1_wrAddr),
    .io_targets_1_wrData (_dmemMux_io_targets_1_wrData),
    .io_targets_1_wr     (_dmemMux_io_targets_1_wr),
    .io_targets_2_rdAddr (_dmemMux_io_targets_2_rdAddr),
    .io_targets_2_rdData (_gpio_dmemPort_rdData),	// src/main/scala/dtu/DtuSubsystem.scala:91:20
    .io_targets_2_wrAddr (_dmemMux_io_targets_2_wrAddr),
    .io_targets_2_wrData (_dmemMux_io_targets_2_wrData),
    .io_targets_2_wr     (_dmemMux_io_targets_2_wr),
    .io_targets_3_rdAddr (_dmemMux_io_targets_3_rdAddr),
    .io_targets_3_rdData (_uart_dmemPort_rdData),	// src/main/scala/dtu/DtuSubsystem.scala:93:20
    .io_targets_3_wrAddr (_dmemMux_io_targets_3_wrAddr),
    .io_targets_3_wrData (_dmemMux_io_targets_3_wrData),
    .io_targets_3_wr     (_dmemMux_io_targets_3_wr)
  );
  assign io_irq = 1'h0;	// src/main/scala/dtu/DtuSubsystem.scala:71:7, :74:10
  assign io_gpio_out =
    {_gpio_gpioPort_out, 1'h0, _uart_uartPins_tx, 1'h0, _ponte_io_uart_tx};	// src/main/scala/dtu/DtuSubsystem.scala:71:7, :74:10, :80:21, :91:20, :93:20, :119:36
  assign io_gpio_outputEnable = {_gpio_gpioPort_outputEnable, 4'hA};	// src/main/scala/dtu/DtuSubsystem.scala:71:7, :91:20, :125:54
endmodule

